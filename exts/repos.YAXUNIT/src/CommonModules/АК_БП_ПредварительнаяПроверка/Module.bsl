#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
    
    ЮТТесты.ВТранзакции().УдалениеТестовыхДанных()
        .ДобавитьТест("СообщениеОбИзмененииПриСогласовании")
    ;

КонецПроцедуры

Процедура СообщениеОбИзмененииПриСогласовании() Экспорт

	
	ПараметрыЗаписи = ЮТОбщий.ПараметрыЗаписи();
	ПараметрыЗаписи.ОбменДаннымиЗагрузка = Истина;
	
	АвторКоммита = ЮТест.Данные().СоздатьЭлемент(Справочники.Пользователи, "Автор"); 
	Ответственный = ЮТест.Данные().СоздатьЭлемент(Справочники.Пользователи, "Ответственный");
	Проверяющий = ЮТест.Данные().СоздатьЭлемент(Справочники.Пользователи, "Проверяющий");
	
	Конфигурация = ЮТест.Данные().СоздатьЭлемент(Справочники.Конфигурации, "config"); 
	ОписаниеХранилища = Новый Структура;
	ОписаниеХранилища.Вставить("Владелец", Конфигурация);
	Хранилище = ЮТест.Данные().СоздатьЭлемент(Справочники.Хранилища, "hran", ОписаниеХранилища);
	
	ИмяОбъекта = "Справочник.Контрагенты";
	ОписаниеОбъекта = Новый Структура;
	ОписаниеОбъекта.Вставить("Владелец", Конфигурация);
	ОбъектМД = ЮТест.Данные().СоздатьЭлемент(Справочники.ОбъектыМетаданных, ИмяОбъекта, ОписаниеОбъекта);

	ОписаниеКоммита = Новый Структура;
	ОписаниеКоммита.Вставить("Код", 1);
	ОписаниеКоммита.Вставить("Дата", ТекущаяДатаСеанса());
	ОписаниеКоммита.Вставить("Автор", АвторКоммита);
	ОписаниеКоммита.Вставить("Владелец", Хранилище);
	ОписаниеКоммита.Вставить("Изменены", Новый ТаблицаЗначений);
	ОписаниеКоммита.Изменены.Колонки.Добавить("ИмяОбъекта");
	ОписаниеКоммита.Изменены.Добавить().ИмяОбъекта = ИмяОбъекта;	
	Коммит = ЮТест.Данные().СоздатьЭлемент(Справочники.ИсторияХранилища, "", ОписаниеКоммита);

	ЛогическаяПодсистема = ЮТест.Данные().СоздатьЭлемент(Справочники.ЛогическиеПодсистемы, "Подсистема");
	
	ОписаниеСвязи = Новый Структура;
	ОписаниеСвязи.Вставить("ОбъектМетаданных", ОбъектМД);
	ОписаниеСвязи.Вставить("ЛогическаяПодсистема", ЛогическаяПодсистема);
	//ЮТест.Данные().СоздатьЭлемент(РегистрыСведений.СоставЛогическихПодсистем, ОписаниеСвязи);
	Связь = РегистрыСведений.СоставЛогическихПодсистем.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Связь, ОписаниеСвязи);
	Связь.Записать();

	ОписаниеСвязи = Новый Структура;
	ОписаниеСвязи.Вставить("ЛогическаяПодсистема", ЛогическаяПодсистема);		
	ОписаниеСвязи.Вставить("Ответственный", Ответственный);		
	ОписаниеСвязи.Вставить("Период", ТекущаяДатаСеанса() - 3600);		
	//ЮТест.Данные().СоздатьЭлемент(РегистрыСведений.ОтветственныеЛогическихПодсистем, ОписаниеСвязи);
	Связь = РегистрыСведений.ОтветственныеЛогическихПодсистем.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Связь, ОписаниеСвязи);
	Связь.Записать();

	ОписаниеБП = Новый Структура;
	ОписаниеБП.Вставить("Исполнитель", Проверяющий);
	ОписаниеБП.Вставить("Проверил_ПроверкаКода", Проверяющий);
	ОписаниеБП.Вставить("Коммиты", Новый ТаблицаЗначений);
	ОписаниеБП.Вставить("Дата", ТекущаяДатаСеанса());
	ОписаниеБП.Коммиты.Колонки.Добавить("Коммит");
	ОписаниеБП.Коммиты.Добавить().Коммит = Коммит;	
	БП_ПредварительнаяПроверка = ЮТест.Данные().СоздатьДокумент(БизнесПроцессы.ПредварительнаяПроверка, ОписаниеБП);
	БП_Объект = БП_ПредварительнаяПроверка.ПолучитьОбъект();
	
	СообщенияКОтправкеДляТеста = БП_Объект.ЮТ_ПолучитьСообщенияКОтправкеДляТеста();
    ЮТест.ОжидаетЧто(СообщенияКОтправкеДляТеста)
        .ИмеетТип("Массив")
        .Заполнено()
    ;
	
	Тело = СообщенияКОтправкеДляТеста[0].Тело;
    ЮТест.ОжидаетЧто(Тело)
        .ИмеетТип("Строка")
        .Заполнено()
        .Содержит(Строка(Коммит))
        .Содержит(Строка(Конфигурация))
        .Содержит(Строка(ИмяОбъекта))
        .Содержит(Строка(Проверяющий))
    ;

КонецПроцедуры

#КонецОбласти