#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СведенияОВнешнейОбработке
// Возвращает сведения о внешней обработке.
//
// Возвращаемое значение:
//   Структура - Подробнее см. ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке().
//
Функция СведенияОВнешнейОбработке() Экспорт
		
	Мета = ЭтотОбъект.Метаданные();
	Версия = Мета.Комментарий;
	ВерсияБСП = "3.1.7.82";
	ТекущаяВерсияБСП = СтандартныеПодсистемыСервер.ВерсияБиблиотеки();
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке(ВерсияБСП);
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет();
	ПараметрыРегистрации.Версия = Версия;
	ПараметрыРегистрации.Наименование = Мета.Представление();
	ПараметрыРегистрации.Информация = Мета.Представление();
	ПараметрыРегистрации.Назначение.Добавить("Подсистема.КонтрольТрудозатрат");
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = "_" + Мета.Представление();
	НоваяКоманда.Идентификатор = Мета.ПолноеИмя();
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции
#КонецОбласти

#Область ВариантыОтчетов
// Задать настройки формы отчета.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения
//         - Неопределено
//   КлючВарианта - Строка
//                - Неопределено
//   Настройки - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
  Настройки.События.ПриОпределенииИспользуемыхТаблиц = Истина;
КонецПроцедуры

// Список регистров и других объектов метаданных, по которым формируется отчет.
//   Используется для проверки что отчет может содержать не обновленные данные.
//
// Параметры:
//   КлючВарианта - Строка
//                - Неопределено -
//       Имя предопределенного или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов для варианта расшифровки или без контекста.
//   ИспользуемыеТаблицы - Массив - 
//       Полные имена объектов метаданных (регистров, документов и других таблиц),
//       данные которых выводятся в отчете.
//
Процедура ПриОпределенииИспользуемыхТаблиц(КлючВарианта, ИспользуемыеТаблицы) Экспорт
  ИспользуемыеТаблицы.Добавить(Метаданные.Справочники.ЗадачиМетеор.ПолноеИмя());
  ИспользуемыеТаблицы.Добавить(Метаданные.Справочники.Пользователи.ПолноеИмя());
  ИспользуемыеТаблицы.Добавить(Метаданные.Справочники.РолиИсполнителей.ПолноеИмя());
  ИспользуемыеТаблицы.Добавить(Метаданные.РегистрыСведений.ОценкаТрудозатратПоЗадачам.ПолноеИмя());
КонецПроцедуры
#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СхемаКомпоновки = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
	
    ОчередьСогласованияТрудозатрат = ОчередьСогласованияТрудозатрат();
    ВнешниеНаборыДанных = Новый Структура;
    ВнешниеНаборыДанных.Вставить("ОчередьСогласованияТрудозатрат", ОчередьСогласованияТрудозатрат);
	
	КомпановщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;    
	МакетКомпановки = КомпановщикМакета.Выполнить(СхемаКомпоновки, НастройкиКомпоновки, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпановки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОчередьСогласованияТрудозатрат()
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ТочкаМаршрутаСогласованиеТрудозатрат",
		БизнесПроцессы.КонтрольТрудозатрат.ТочкиМаршрута.СогласованиеФактическихТрудозатрат);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(ЗадачаИсполнителя.БизнесПроцесс КАК БизнесПроцесс.КонтрольТрудозатрат).ЗадачаМетеор КАК ЗадачаМетеор
		|ПОМЕСТИТЬ Задачи
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.БизнесПроцесс ССЫЛКА БизнесПроцесс.КонтрольТрудозатрат
		|	И ЗадачаИсполнителя.ТочкаМаршрута = &ТочкаМаршрутаСогласованиеТрудозатрат
		|	И НЕ ЗадачаИсполнителя.Выполнена
		|	И НЕ ВЫРАЗИТЬ(ЗадачаИсполнителя.БизнесПроцесс КАК БизнесПроцесс.КонтрольТрудозатрат).ЗадачаМетеор = ЗНАЧЕНИЕ(Справочник.ЗадачиМетеор.ПустаяСсылка)
		|	И НЕ ЗадачаИсполнителя.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Задачи.ЗадачаМетеор КАК ЗадачаМетеор
		|ИЗ
		|	Задачи КАК Задачи";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗадачаМетеор = РезультатЗапроса.Выбрать();
	
	ЧасыПоЗадачам = Справочники.ЗадачиМетеор.ТаблицаЧасовПоЗадаче();
	ЧасыПоЗадачам.Колонки.Добавить("ЗадачаМетеор", Новый ОписаниеТипов("СправочникСсылка.ЗадачиМетеор"));
	
	Пока ВыборкаЗадачаМетеор.Следующий() Цикл
		ЧасыПоЗадаче = Справочники.ЗадачиМетеор.ПолучитьЧасыПоЗадачеМетеор(ВыборкаЗадачаМетеор.ЗадачаМетеор);
		ЧасыПоЗадаче.Колонки.Добавить("ЗадачаМетеор", Новый ОписаниеТипов("СправочникСсылка.ЗадачиМетеор"));
		ЧасыПоЗадаче.ЗаполнитьЗначения(ВыборкаЗадачаМетеор.ЗадачаМетеор, "ЗадачаМетеор");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ЧасыПоЗадаче, ЧасыПоЗадачам);
	КонецЦикла;
	
	ЧасыПоЗадачам.Свернуть("ЗадачаМетеор, Пользователь, Роль", "Затрачено");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ЧасыПоЗадачам", ЧасыПоЗадачам);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧасыПоЗадачам.ЗадачаМетеор КАК ЗадачаМетеор,
		|	ЧасыПоЗадачам.Пользователь КАК Пользователь,
		|	ЧасыПоЗадачам.Роль КАК Роль,
		|	ЧасыПоЗадачам.Затрачено КАК Затрачено
		|ПОМЕСТИТЬ ЧасыПоЗадачам
		|ИЗ
		|	&ЧасыПоЗадачам КАК ЧасыПоЗадачам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Исполнитель,
		|	ЧасыПоЗадачам.Пользователь КАК ИсполнительСтрокой,
		|	ЧасыПоЗадачам.Роль КАК РольСтрокой,
		|	ЧасыПоЗадачам.Затрачено КАК Затрачено,
		|	РолиИсполнителей.Ссылка КАК РольИсполнителя,
		|	Пользователи.Команда КАК Команда,
		|	ЧасыПоЗадачам.ЗадачаМетеор КАК ЗадачаМетеор,
		|	Пользователи.Команда.Удалить_Руководитель КАК РуководительКоманды
		|ПОМЕСТИТЬ ИсполнителиЗадачи
		|ИЗ
		|	ЧасыПоЗадачам КАК ЧасыПоЗадачам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ЧасыПоЗадачам.Пользователь = Пользователи.Наименование
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиИсполнителей КАК РолиИсполнителей
		|		ПО ЧасыПоЗадачам.Роль = РолиИсполнителей.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОценкаТрудозатратПоЗадачам.ЗадачаМетеор КАК ЗадачаМетеор,
		|	ОценкаТрудозатратПоЗадачам.РольИсполнителяЗадачи КАК РольИсполнителяЗадачи,
		|	ОценкаТрудозатратПоЗадачам.Количество КАК Количество
		|ПОМЕСТИТЬ ОценкаТрудозатратПоЗадачам
		|ИЗ
		|	РегистрСведений.ОценкаТрудозатратПоЗадачам КАК ОценкаТрудозатратПоЗадачам
		|ГДЕ
		|	(ОценкаТрудозатратПоЗадачам.ЗадачаМетеор, ОценкаТрудозатратПоЗадачам.РольИсполнителяЗадачи) В
		|			(ВЫБРАТЬ
		|				ИсполнителиЗадачи.ЗадачаМетеор,
		|				ИсполнителиЗадачи.РольИсполнителя
		|			ИЗ
		|				ИсполнителиЗадачи КАК ИсполнителиЗадачи)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Задачи.ЗадачаМетеор КАК ЗадачаМетеор,
		|	ИсполнителиЗадачи.Исполнитель КАК Исполнитель,
		|	ИсполнителиЗадачи.РольИсполнителя КАК РольИсполнителя,
		|	ИсполнителиЗадачи.ИсполнительСтрокой КАК ИсполнительСтрокой,
		|	ИсполнителиЗадачи.Затрачено КАК Затрачено,
		|	0 КАК Оценка,
		|	ИсполнителиЗадачи.РуководительКоманды КАК РуководительКоманды,
		|	ИсполнителиЗадачи.Команда КАК Команда
		|ИЗ
		|	Задачи КАК Задачи
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИсполнителиЗадачи КАК ИсполнителиЗадачи
		|		ПО Задачи.ЗадачаМетеор = ИсполнителиЗадачи.ЗадачаМетеор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОценкаТрудозатратПоЗадачам.ЗадачаМетеор,
		|	ОценкаТрудозатратПоЗадачам.РольИсполнителяЗадачи,
		|	ОценкаТрудозатратПоЗадачам.РольИсполнителяЗадачи,
		|	"""",
		|	0,
		|	ОценкаТрудозатратПоЗадачам.Количество,
		|	ЕСТЬNULL(РолиВЗадачеПоКомандам.РуководительКоманды, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)),
		|	ЗНАЧЕНИЕ(Справочник.Команды.ПустаяСсылка)
		|ИЗ
		|	ОценкаТрудозатратПоЗадачам КАК ОценкаТрудозатратПоЗадачам
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ИсполнителиЗадачи.РольИсполнителя КАК РольИсполнителя,
		|			ИсполнителиЗадачи.ЗадачаМетеор КАК ЗадачаМетеор,
		|			ИсполнителиЗадачи.РуководительКоманды КАК РуководительКоманды
		|		ИЗ
		|			ИсполнителиЗадачи КАК ИсполнителиЗадачи) КАК РолиВЗадачеПоКомандам
		|		ПО ОценкаТрудозатратПоЗадачам.ЗадачаМетеор = РолиВЗадачеПоКомандам.ЗадачаМетеор
		|			И ОценкаТрудозатратПоЗадачам.РольИсполнителяЗадачи = РолиВЗадачеПоКомандам.РольИсполнителя";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
