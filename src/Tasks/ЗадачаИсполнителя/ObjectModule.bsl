
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область ОбработчикиПроведения

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередВыполнением(Отказ)
	
	Если Не ЗначениеЗаполнено(Исполнитель) Тогда
		Исполнитель = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Выполнена И Не Ссылка.Выполнена Тогда
		ДатаЗавершения = ТекущаяДатаСеанса();
		
		Если ТочкаМаршрута = БизнесПроцессы.СогласованиеПереноса.ТочкиМаршрута.ПроверкаКода Тогда
			УстановитьПризнакПросрочена();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоНовый() И БизнесПроцесс.Метаданные().Реквизиты.Найти("Исполнитель") <> Неопределено Тогда
		Если РольИсполнителя = Справочники.РолиИсполнителей.Тестирование Тогда
			ЖелаемыйИсполнитель = Справочники.Пользователи.ПустаяСсылка();	
		ИначеЕсли Не ЗначениеЗаполнено(ЖелаемыйИсполнитель) Тогда 
			ЖелаемыйИсполнитель = БизнесПроцесс.Исполнитель;
		КонецЕсли;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда
		Выполнена = Ложь;
	КонецЕсли;
	
	Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.КонвейерОбработки") И Не ЗначениеЗаполнено(Комментарий) Тогда
		Комментарий = СтрШаблон("%1 %2 .. %3", ТочкаМаршрута, БизнесПроцесс.ПоследнийПроверенныйКоммит, БизнесПроцесс.ПоследнийЗагруженныйКоммит);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьПризнакПросрочена()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСтартаЗадачи", Дата);
	Запрос.УстановитьПараметр("ТекущаяДата", ДатаЗавершения);
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПроизводственныйКалендарь.День КАК ПлановаяДатаВыполнения,
		|	КОНЕЦПЕРИОДА(ПроизводственныйКалендарь.День, ДЕНЬ) < &ТекущаяДата КАК Просрочена
		|ПОМЕСТИТЬ ПлановоеВыполнение
		|ИЗ
		|	РегистрСведений.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
		|ГДЕ
		|	ПроизводственныйКалендарь.День >= НАЧАЛОПЕРИОДА(&ДатаСтартаЗадачи, ДЕНЬ)
		|	И НЕ ПроизводственныйКалендарь.Выходной
		|	И (ЧАС(&ДатаСтартаЗадачи) < 10
		|			ИЛИ ПроизводственныйКалендарь.День > НАЧАЛОПЕРИОДА(&ДатаСтартаЗадачи, ДЕНЬ))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлановоеВыполнение.Просрочена КАК Просрочена
		|ИЗ
		|	ПлановоеВыполнение КАК ПлановоеВыполнение
		|ГДЕ
		|	ПлановоеВыполнение.Просрочена";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Просрочена = Не РезультатЗапроса.Пустой();	
	
КонецПроцедуры


#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

