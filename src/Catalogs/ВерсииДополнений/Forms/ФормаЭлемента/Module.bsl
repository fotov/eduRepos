
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ВызватьИсключение "Создание нового элемента копированием запрещено.";
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения) Тогда
		ВызватьИсключение "Создание нового элемента из формы подчинения отключено.";
	КонецЕсли;
	
	ЭтоНовый = Объект.Ссылка.Пустая();
	Параметры.Свойство("ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии", ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии);
	
	Если ЭтоНовый Тогда
		ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии = Истина;
		Параметры.Свойство("ТипДополнения", ТипДополнения);
	Иначе
		ЗаполнитьРеквизитыДополнения();
		ЗаполнитьДатыАктуальностиРасширения();
		ЗаполнитьЗадачуМетеор();
		URLGit = РаботаСGIT.URLGit(Объект.Ссылка);
	КонецЕсли;
	
	НастроитьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриОткрытии(Отказ)
	
	Если ПоказатьДиалогЗагрузкиИзФайлаПриОткрытии Тогда
		Если Не ЗначениеЗаполнено(ТипДополнения) Тогда
			ТипДополнения = Ждать ВвестиЗначениеАсинх(ПредопределенноеЗначение("Перечисление.ТипыДополнений.ПустаяСсылка"), "Введите тип дополнения.");
			Если Не ЗначениеЗаполнено(ТипДополнения) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран тип дополнения.",,,, Отказ);
				Закрыть();
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		ПодключитьОбработчикОжидания("ОбновитьИзФайла", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ИнтерактивнаяЗапись");
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("АдресДанныхДополнения", АдресДанныхДополнения);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ДатыАктуальностиРасширения", ОбщегоНазначения.ТаблицаЗначенийВМассив(ДатыАктуальностиРасширения.Выгрузить()));
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗадачаМетеор", ЗадачаМетеор);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Конфигурация", Конфигурация);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ТипДополнения", ТипДополнения);
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ТипРасширения", ТипРасширения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(ТипДополнения) Тогда
		ОбщегоНазначения.СообщитьПользователю("Поле ""Тип дополнения"" не заполнено.",, "ТипДополнения",, Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Конфигурация) Тогда
		ОбщегоНазначения.СообщитьПользователю("Поле ""Конфигурация"" не заполнено.",, "Конфигурация",, Отказ);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ЗадачаМетеор) Тогда
		ОбщегоНазначения.СообщитьПользователю("Поле ""Задача метеор"" не заполнено.",, "ЗадачаМетеор",, Отказ);
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗадачиМетеорДополнений.ВерсияДополнения КАК ВерсияДополнения
			|ИЗ
			|	РегистрСведений.ЗадачиМетеорДополнений КАК ЗадачиМетеорДополнений
			|ГДЕ
			|	ЗадачиМетеорДополнений.ЗадачаМетеор = &ЗадачаМетеор
			|	И ЗадачиМетеорДополнений.ВерсияДополнения <> &ВерсияДополнения
			|	И ЗадачиМетеорДополнений.ВерсияДополнения.Владелец <> &Владелец";
		Запрос.УстановитьПараметр("ВерсияДополнения", Объект.Ссылка);
		Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
		Запрос.УстановитьПараметр("ЗадачаМетеор", ЗадачаМетеор);
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон("Указанная ""Задача метеор"" уже используется в дополнении %1.", Выборка.ВерсияДополнения),
				Выборка.ВерсияДополнения,
				"ЗадачаМетеор",
				,
				Отказ);
		КонецЕсли;
	КонецЕсли;
	Если ТипДополнения = Перечисления.ТипыДополнений.Расширение И ДатыАктуальностиРасширения.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю("Для расширения необходимо заполнить базы.",, "ДатыАктуальностиРасширения",, Отказ);
	КонецЕсли;
	Если ТипДополнения = Перечисления.ТипыДополнений.Расширение И Не ЗначениеЗаполнено(ТипРасширения) Тогда
		ОбщегоНазначения.СообщитьПользователю("Для расширения необходимо указать тип.",, "ТипРасширения",, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЭтоНовый = Ложь;
	НастроитьФорму(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Если ТипДополнения = Перечисления.ТипыДополнений.Расширение Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЗадачаМетеор", ЗадачаМетеор);
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВерсииДополненийПоЗадачеИБазеСрезПоследних.ВерсияДополнения.Версия КАК Версия,
			|	ВерсииДополненийПоЗадачеИБазеСрезПоследних.База.Наименование КАК БазаНаименование
			|ИЗ
			|	РегистрСведений.ВерсииДополненийПоЗадачеИБазе.СрезПоследних КАК ВерсииДополненийПоЗадачеИБазеСрезПоследних
			|ГДЕ
			|	ВерсииДополненийПоЗадачеИБазеСрезПоследних.ЗадачаМетеор = &ЗадачаМетеор
			|ИТОГИ ПО
			|	Версия";
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаВерсияДополненияВерсия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ВерсииПоБазам = Новый Массив();
		Пока ВыборкаВерсияДополненияВерсия.Следующий() Цикл
			БазыВерсии = Новый Массив();
			ВыборкаДетальныеЗаписи = ВыборкаВерсияДополненияВерсия.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				БазыВерсии.Добавить(ВыборкаДетальныеЗаписи.БазаНаименование);
			КонецЦикла;
			ВерсииПоБазам.Добавить(СтрШаблон("%1 [%2]", ВыборкаВерсияДополненияВерсия.Версия, СтрСоединить(БазыВерсии, ", "))); 
		КонецЦикла;
	
		Базы = СтрШаблон("[%1]", СтрСоединить(ВерсииПоБазам, ", "));
		ИнтеграцияСМетеор.ОтправитьОписаниеЗадачиПодключенияРасширения(
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗадачаМетеор, "Код"),
			Строка(ТипРасширения),
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Наименование"),
			Объект.Версия,
			Объект.Описание,
			Базы);
		ШаблонСообщенияВЧат = 
			"Расширение %1 (версия: %2) загружено в Репос.
			|Актуальные версии расширения для установки в базы:
			|%3";
		ИнтеграцияСМетеор.ОтправитьФорматированныйКомментарийВМетеор(
			ЗадачаМетеор,
			СтрШаблон(ШаблонСообщенияВЧат, Объект.Наименование, Объект.Версия, Базы));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Базы = Новый Массив();
	Для Каждого СтрокаБазы Из ДатыАктуальностиРасширения Цикл
		Базы.Добавить(СтрокаБазы.База);
	КонецЦикла;
	СообщениеИзмененияБаз = ПолучитьИзмененияВерсийПоБазамИЗадаче(
		ЗадачаМетеор,
		Объект.Версия,
		Базы);
	
	Если Не ПустаяСтрока(СообщениеИзмененияБаз) Тогда
		ТекстВопроса = "Изменить актуальные версии дополнения по задаче для баз?" + Символы.ПС + СообщениеИзмененияБаз;
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,, "Изменение версии в базе");
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВладелецПредыдущее = Объект.Владелец;
КонецПроцедуры

&НаКлиенте
Процедура ВладелецНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ВладелецПредыдущее = Объект.Владелец;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВладелецПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ВладелецПредыдущее) И Не ВладелецПредыдущее = Объект.Владелец Тогда
		Ответ = Ждать ВопросАсинх("Связанные реквизиты будут заполнены по данным выбранного дополнения. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Объект.Владелец = ВладелецПредыдущее;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ВладелецПредыдущее = Объект.Владелец;
	ЗаполнитьРеквизитыДополнения();
	НастроитьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДополненияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ТипДополненияПредыдущее = ТипДополнения;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ТипДополненияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ТипДополненияПредыдущее) И Не ТипДополненияПредыдущее = ТипДополнения Тогда
		Ответ = Ждать ВопросАсинх("Зависимые реквизиты будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
	    Если Ответ = КодВозвратаДиалога.Нет Тогда
			ТипДополнения = ТипДополненияПредыдущее;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТипДополненияПредыдущее = ТипДополнения;
	АдресДанныхДополнения = "";
	Объект.Версия = "";
	Объект.ИмяОбъекта = "";
	Объект.ИмяФайла = "";
	ДатыАктуальностиРасширения.Очистить();
	
	НастроитьФорму(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура URLGitОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачатьЗапускПриложения(Новый ОписаниеОповещения, URLGit);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ЗагрузитьИзФайла(Команда)
	Если ЭтоНовый И Модифицированность Или Не ЭтоНовый Тогда
		Ответ = Ждать ВопросАсинх("Реквизиты будут обновлены по данным файла. Продолжить?", РежимДиалогаВопрос.ДаНет);
	    Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ОбновитьИзФайла();
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВФайл(Команда)
	ФайлВерсии = ПолучитьПрисоединенныйФайлВерсииДополнения(Объект.Ссылка);
	Если Не ЗначениеЗаполнено(ФайлВерсии) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Файл дополнения не загружен.");
		Возврат;
	КонецЕсли;
	ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(ФайлВерсии);
	РаботаСФайламиКлиент.СохранитьФайлКак(ДанныеФайла);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФорму(Форма)
	
	ТипДополненияЗаполнен = ЗначениеЗаполнено(Форма.ТипДополнения);
	Форма.Элементы.ГруппаСтраницы.Доступность = ТипДополненияЗаполнен;
	Форма.Элементы.ФормаЗагрузитьИзФайла.Доступность = ТипДополненияЗаполнен;
	Форма.Элементы.ФормаВыгрузитьВФайл.Доступность = ТипДополненияЗаполнен;
	
	Форма.Элементы.ГруппаИсторияСтатусов.ТолькоПросмотр = Форма.Объект.Ссылка.Пустая();
	Форма.Элементы.Владелец.ТолькоПросмотр = Не Форма.Объект.Ссылка.Пустая();
	
	ДополнениеЗаполнено = ЗначениеЗаполнено(Форма.Объект.Владелец);
	Форма.Элементы.ТипДополнения.ТолькоПросмотр = ДополнениеЗаполнено;
	Форма.Элементы.Конфигурация.ТолькоПросмотр = ДополнениеЗаполнено;
	
	Форма.Элементы.ГруппаБазы.Видимость = Форма.ТипДополнения = ПредопределенноеЗначение("Перечисление.ТипыДополнений.Расширение");
	Форма.Элементы.ТипРасширения.Видимость = Форма.ТипДополнения = ПредопределенноеЗначение("Перечисление.ТипыДополнений.Расширение");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.ИсторияСтатусов,
		"ВерсияДополнения",
		Форма.Объект.Ссылка,
		,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыДополнения()
	
	РеквизитыДополнения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец, "ТипДополнения, Конфигурация, ТипРасширения");
	ТипДополнения = РеквизитыДополнения.ТипДополнения;
	Конфигурация = РеквизитыДополнения.Конфигурация;
	ТипРасширения = РеквизитыДополнения.ТипРасширения;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатыАктуальностиРасширения()
	
	Если Не ТипДополнения = Перечисления.ТипыДополнений.Расширение Тогда
		ДатыАктуальностиРасширения.Очистить();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДатыАктуальностиРасширений.База КАК База,
		|	ДатыАктуальностиРасширений.ДатаАктуальности КАК ДатаАктуальности
		|ИЗ
		|	РегистрСведений.ДатыАктуальностиРасширений КАК ДатыАктуальностиРасширений
		|ГДЕ
		|	ДатыАктуальностиРасширений.ВерсияДополнения = &ВерсияДополнения";
	
	Запрос.УстановитьПараметр("ВерсияДополнения", Объект.Ссылка);
	ДатыАктуальностиРасширения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗадачуМетеор()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачиМетеорДополнений.ЗадачаМетеор КАК ЗадачаМетеор
		|ИЗ
		|	РегистрСведений.ЗадачиМетеорДополнений КАК ЗадачиМетеорДополнений
		|ГДЕ
		|	ЗадачиМетеорДополнений.ВерсияДополнения = &ВерсияДополнения";
	
	Запрос.УстановитьПараметр("ВерсияДополнения", Объект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЗадачаМетеор = Справочники.ЗадачиМетеор.ПустаяСсылка();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЗадачаМетеор = ВыборкаДетальныеЗаписи.ЗадачаМетеор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайла()
	
	Если ТипДополнения = ПредопределенноеЗначение("Перечисление.ТипыДополнений.Расширение") Тогда
		Расширение = "cfe";
		Фильтр = СтрШаблон("Расширение конфигурации (*.%1)|*.%1", Расширение);
		Заголовок = "Выберите файл расширения конфигурации";
	ИначеЕсли ТипДополнения = ПредопределенноеЗначение("Перечисление.ТипыДополнений.ДополнительныйОтчетИлиОбработка") Тогда
		РасширениеОтчет = "erf";
		РасширениеОбработка = "epf";
		Фильтр = СтрШаблон("Отчёт, обработка (*.%1;*.%2)|*.%1;*.%2|Все файлы (*.*)|*.*", РасширениеОтчет, РасширениеОбработка);
		Заголовок = "Выберите файл отчёта, обработки";
	Иначе
		ВызватьИсключение "Неизвестный тип дополнения";
	КонецЕсли;
	
	Контекст = Новый Структура("ТипДополнения", ТипДополнения);
	ОбработчикЗавершения = Новый ОписаниеОповещения("ОбновитьИзФайлаПослеПомещенияФайлов", ЭтотОбъект, Контекст);

	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.Диалог.Фильтр = Фильтр;
	ПараметрыЗагрузки.Диалог.Заголовок = Заголовок;
	ПараметрыЗагрузки.Диалог.ПроверятьСуществованиеФайла = Истина;
	ПараметрыЗагрузки.Диалог.МножественныйВыбор = Ложь;
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ФайловаяСистемаКлиент.ЗагрузитьФайлы(ОбработчикЗавершения, ПараметрыЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОбновитьИзФайлаПослеПомещенияФайлов(ПомещенныеФайлы, Контекст) Экспорт
	
	Если ПомещенныеФайлы = Неопределено Или ПомещенныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ДобавляемоеДополнение Из ПомещенныеФайлы Цикл
		// Данные локального справочника дополнений
		ДобавляемоеДополнение.Вставить("Дополнение");
		ДобавляемоеДополнение.Вставить("ВерсияДополнения");
		ДобавляемоеДополнение.Вставить("ВерсияСуществует", Ложь);
		ДобавляемоеДополнение.Вставить("ДополнениеСуществует", Ложь);
	КонецЦикла;
	
	// Получение данных по загружаемым расширениям из файлов и из базы
	ДополнитьОписаниеДополнений(ПомещенныеФайлы, Контекст);
	
	Отказ = Ложь;
	МассивОшибок = Новый Массив;
	ШаблонВерсияСуществует = "Версия дополнения уже есть в базе. %1: %2.";
	ШаблонВерсияНеЗаполнена = "У дополнения не указана версия: %1.";
	ОписаниеЗагруженнойВерсии = ПомещенныеФайлы[0];
	Если ОписаниеЗагруженнойВерсии.ВерсияСуществует Тогда
		Отказ = Истина;
		МассивОшибок.Добавить(СтрШаблон(ШаблонВерсияСуществует, ОписаниеЗагруженнойВерсии.Имя, ОписаниеЗагруженнойВерсии.Версия));
	ИначеЕсли ОписаниеЗагруженнойВерсии.Версия = "" Тогда
		Отказ = Истина;
		МассивОшибок.Добавить(СтрШаблон(ШаблонВерсияНеЗаполнена, ОписаниеЗагруженнойВерсии.Имя));
	КонецЕсли;
	Если Не Отказ И ТипДополнения = ПредопределенноеЗначение("Перечисление.ТипыДополнений.Расширение")
			И Не ИмяСоответствуетШаблону(ОписаниеЗагруженнойВерсии.Имя) Тогда
		МассивОшибок.Добавить(
			СтрШаблон(
				"Для загружаемого дополнения проверка правила именования завершилась с ошибкой. Установите корректное имя расширения. %1",
				ОписаниеЗагруженнойВерсии.Имя));
	
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить("Продолжить", "Продолжить");
		СписокКнопок.Добавить("ОткрытьГенераторИмени", "Открыть генератор имени");
		СписокКнопок.Добавить("Прервать", "Прервать");
		ТекстВопроса = СтрШаблон(
			"Для загружаемого дополнения проверка правила именования завершилась с ошибкой. Выберите действие. %1",
			ОписаниеЗагруженнойВерсии.Имя);
		Ответ = Ждать ВопросАсинх(ТекстВопроса, СписокКнопок,, "ОткрытьГенераторИмени", "Ошибка имени дополнения");
		Если Ответ = "Продолжить" Тогда
		ИначеЕсли Ответ = "ОткрытьГенераторИмени" Тогда
			Отказ = Истина;
			ОткрытьФорму("Справочник.ВерсииДополнений.Форма.ФормаГенератораИмениВерсииРасширения");
		ИначеЕсли Ответ = "Прервать" Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		ТекстОшибки = "Загрузка дополнений прервана по причине:" 
			+ Символы.ПС + СтрСоединить(МассивОшибок, Символы.ПС);
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ОбновитьИзФайлаПослеПредупрежденияОбОшибке", ЭтотОбъект), ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеЗагруженнойВерсии.Дополнение) Тогда
		Объект.Владелец = ОписаниеЗагруженнойВерсии.Дополнение;
		ЗаполнитьРеквизитыДополнения();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеЗагруженнойВерсии.Версия) Тогда
		Объект.Версия = ОписаниеЗагруженнойВерсии.Версия;
	КонецЕсли;

	Объект.Наименование = СтрШаблон("%1_%2", ОписаниеЗагруженнойВерсии.Имя, ОписаниеЗагруженнойВерсии.Версия);;
	Объект.ИмяОбъекта = ОписаниеЗагруженнойВерсии.Имя;
	Объект.ИмяФайла = ОписаниеЗагруженнойВерсии.ИмяФайла;
	АдресДанныхДополнения = ОписаниеЗагруженнойВерсии.Хранение;
	Модифицированность = Истина;
	
	НастроитьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайлаПослеПредупрежденияОбОшибке(ДополнительныеПараметры) Экспорт
	Если ЭтоНовый И Не Модифицированность Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДополнитьОписаниеДополнений(ПомещенныеФайлы, Контекст)
	РаботаСДополнениями.ДополнитьОписаниеДополненийДаннымиИзФайла(ПомещенныеФайлы, Контекст);
	РаботаСДополнениями.ДополнитьОписаниеДополненийДаннымиСправочника(ПомещенныеФайлы, Контекст);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПрисоединенныйФайлВерсииДополнения(ВерсияДополнения)
	Файл = Справочники.ВерсииДополненийПрисоединенныеФайлы.ПустаяСсылка();
	ПрисоединенныеФайлы = Новый Массив;
	РаботаСФайлами.ЗаполнитьПрисоединенныеФайлыКОбъекту(ВерсияДополнения, ПрисоединенныеФайлы);
	Если ПрисоединенныеФайлы.Количество() Тогда
		Файл = ПрисоединенныеФайлы[0];
	КонецЕсли;
	Возврат Файл;
КонецФункции

&НаКлиенте
Процедура ОткрытьГерераторИмениРасширения(Команда)
	ОткрытьФорму("Справочник.ВерсииДополнений.Форма.ФормаГенератораИмениВерсииРасширения");
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяСоответствуетШаблону(Имя)
	
	// Решение "на скорую руку" без учёта возможности изменения шаблона.
	//Шаблон = "{Исправление|Доработка}_{КодКонфигурации}_{КодАвтора}_{Команда}_{[{YYYYMMDD}]/[Постоянное]}[_{НомерЗадачи}][_[НомерВерсии]][_{Описание}]";
	
	ОбязательныеКлючи = СтрРазделить("_сonf_,_auth_,_team_,_exp_", ",");
	ЕстьОшибки = Ложь;
	Для Каждого Ключ Из ОбязательныеКлючи Цикл
		ПозицияКлюча = СтрНайти(Имя, Ключ);
		Если Не ПозицияКлюча Тогда
			ЕстьОшибки = Истина;
			Прервать;
		КонецЕсли;
		ПозицияНачалаЗначенияКлюча = ПозицияКлюча + СтрДлина(Ключ);
		ПозицияСледующегоКлюча = СтрНайти(Имя, "_",,ПозицияНачалаЗначенияКлюча);
		ПозицияОкончанияЗначенияКлюча = ?(ПозицияСледующегоКлюча = 0, СтрДлина(Имя), ПозицияСледующегоКлюча - 1);
		ДлинаЗначения = (ПозицияОкончанияЗначенияКлюча - ПозицияНачалаЗначенияКлюча + 1);
		Если ДлинаЗначения < 1 Тогда
			ЕстьОшибки = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Не ЕстьОшибки;
	
КонецФункции

&НаКлиенте
Процедура ДатыАктуальностиРасширенияБазаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ЗапрещеноУстанавливатьРасширенияВБазу(ВыбранноеЗначение) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение(, "В выбранную базу запрещено устанавливать дополнения. Обратитесь в техническую поддержку");
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗапрещеноУстанавливатьРасширенияВБазу(База)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(База, "ЗапретУстановкиРасширений") = Истина;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИзмененияВерсийПоБазамИЗадаче(Знач ЗадачаМетеор, Знач Версия, Базы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВерсииДополненийПоЗадачеИБазеСрезПоследних.База КАК База,
		|	ВерсииДополненийПоЗадачеИБазеСрезПоследних.ВерсияДополнения.Версия КАК ВерсияДополненияВерсия,
		|	ВерсииДополненийПоЗадачеИБазеСрезПоследних.База.Наименование КАК БазаНаименование
		|ИЗ
		|	РегистрСведений.ВерсииДополненийПоЗадачеИБазе.СрезПоследних КАК ВерсииДополненийПоЗадачеИБазеСрезПоследних
		|ГДЕ
		|	ВерсииДополненийПоЗадачеИБазеСрезПоследних.ЗадачаМетеор = &ЗадачаМетеор
		|	И ВерсииДополненийПоЗадачеИБазеСрезПоследних.База В(&Базы)
		|	И ВерсииДополненийПоЗадачеИБазеСрезПоследних.ВерсияДополнения.Версия <> &Версия";
	Запрос.УстановитьПараметр("ЗадачаМетеор", ЗадачаМетеор);
	Запрос.УстановитьПараметр("Базы", Базы);
	Запрос.УстановитьПараметр("Версия", Версия);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Изменения = Новый Массив();
	ШаблонИзменения = "В базе %1 с версии %2 на %3.";
	Пока Выборка.Следующий() Цикл
		Изменения.Добавить(
			СтрШаблон(ШаблонИзменения, Выборка.БазаНаименование, Выборка.ВерсияДополненияВерсия, Версия));
	КонецЦикла;
	
	Возврат СтрСоединить(Изменения, Символы.ПС);

КонецФункции



#КонецОбласти
