
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПрочитатьОтветственного();
	КонецЕсли;
	НастроитьФорму();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	НастроитьФорму();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПоПодсистемеКонфигурации(Команда)
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеПодбораОбъектов", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ЛогическаяПодсистема", Объект.Ссылка);
	ОткрытьФорму("Справочник.ЛогическиеПодсистемы.Форма.ФормаПодбораОбъектов",
		ПараметрыОткрытия,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьОтветственного()
	ЗначенияРесурсов = РегистрыСведений.ОтветственныеЛогическихПодсистем.ПолучитьПоследнее(,
		Новый Структура("ЛогическаяПодсистема", Объект.Ссылка));
	Ответственный = ЗначенияРесурсов.Ответственный;
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму()
	Элементы.ГруппаСостав.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Состав,
		"ЛогическаяПодсистема",
		Объект.Ссылка,
		,
		,
		Истина,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
	Элементы.ФормаНазначитьОтветственного.Доступность = РольДоступна("ДобавлениеИзменениеЛогическихПодсистем");
		
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОтветственного(Команда)
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеНазначенияОтветственного", ЭтотОбъект);
	ЗначенияЗаполнения = Новый Структура("ЛогическаяПодсистема", Объект.Ссылка);
	ПараметрыНазначения = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму(
		"РегистрСведений.ОтветственныеЛогическихПодсистем.ФормаЗаписи",
		ПараметрыНазначения,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПослеНазначенияОтветственного(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	ПрочитатьОтветственного();
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодбораОбъектов(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Истина Тогда
		Элементы.Состав.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти