#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция Тест(Знач Наименование, Знач Класс) Экспорт
	
	Наименование = СокрЛП(Наименование);

	Если Не ЗначениеЗаполнено(Наименование) Тогда
		Возврат Справочники.Тесты.ПустаяСсылка();
	КонецЕсли;
	
	Ссылка = НайтиТест(Наименование, Класс);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Ссылка;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.Тесты");
	ЭлементБлокировки.УстановитьЗначение("Наименование", Наименование);
	ЭлементБлокировки.УстановитьЗначение("Класс", Класс);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Ссылка = НайтиТест(Наименование, Класс);
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		
		об = Справочники.Тесты.СоздатьЭлемент();
		об.Наименование = Наименование;
		об.Класс = Класс;
		об.Записать();
		
		Ссылка = об.Ссылка;
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Возврат Ссылка;
	
КонецФункции

Функция НайтиТест(Наименование, Класс)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Тесты.Ссылка КАК Тест
	|ИЗ
	|	Справочник.Тесты КАК Тесты
	|ГДЕ
	|	Тесты.Наименование = &Наименование
	|	И Тесты.Класс = &Класс";
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Класс", Класс);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Тест = Выборка.Тест;
	Иначе
		Тест = Справочники.Тесты.ПустаяСсылка();
	КонецЕсли;
	Возврат Тест;
	
КонецФункции

#КонецОбласти

#КонецЕсли
