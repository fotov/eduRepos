//////////////////////////////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
//////////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

Функция ЗамечанияПоЗадаче(ЗадачаМетеор, ИсточникЗамечаний) Экспорт

	Замечания = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗадачаМетеор", ЗадачаМетеор);
	Запрос.УстановитьПараметр("ИсточникЗамечаний", ИсточникЗамечаний);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Коммит,
	|	Коммит.Код КАК НомерКоммита,
	|	Представление(Автор) КАК Автор,
	|	Дата,
	|	Замечание,
	|	ИмяОбъекта,
	|	Критичное,
	|	НомерСтрокиОбъекта
	|ИЗ
	|	РегистрСведений.ЗамечанияКоммита
	|ГДЕ
	|	ЗадачаМетеор = &ЗадачаМетеор
	|	И ИсточникЗамечаний = &ИсточникЗамечаний
	|	И НЕ Исправлено
	|	
	|	УПОРЯДОЧИТЬ ПО
	|		Критичное УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Замечание) Тогда
			Продолжить;
		КонецЕсли; 
		
		НомерКоммита = Выборка.НомерКоммита;
		Автор = Выборка.Автор;
		Дата = Выборка.Дата;
		
		Замечание = СтрШаблон("По коммиту %1 есть замечание от %2 (%3)", НомерКоммита, Автор, Дата);
		Если Выборка.Критичное Тогда
			Замечание = "КРИТИЧНОЕ ЗАМЕЧАНИЕ " + Замечание;
		КонецЕсли;
		Если ЗначениеЗаполнено(Выборка.ИмяОбъекта) Тогда
			Замечание = Замечание + Символы.ПС + Выборка.ИмяОбъекта;
			Если ЗначениеЗаполнено(Выборка.НомерСтрокиОбъекта) Тогда
				Замечание = Замечание + СтрШаблон(" (%1)", Выборка.НомерСтрокиОбъекта);
			КонецЕсли; 
		КонецЕсли; 
		Замечание = Замечание + Символы.ПС + Выборка.Замечание;
		
		Замечания.Добавить(Замечание);
	
	КонецЦикла;
	
	ЗамечанияПоЗадаче = СтрСоединить(Замечания, Символы.ПС + Символы.ПС);
	
	Возврат ЗамечанияПоЗадаче;

КонецФункции

Процедура ЗагрузитьЗамечанияЗадачиМетеорИзGit(ЗадачаМетеор) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗадачаМетеор", ЗадачаМетеор);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗадачиМетеорВерсийХранилища.ВерсияХранилища КАК ВерсияХранилища
	|ИЗ
	|	РегистрСведений.ЗадачиМетеорВерсийХранилища КАК ЗадачиМетеорВерсийХранилища
	|ГДЕ
	|	ЗадачиМетеорВерсийХранилища.ЗадачаМетеор = &ЗадачаМетеор
	|	И НЕ ЗадачиМетеорВерсийХранилища.ВерсияХранилища.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ЗагрузитьЗамечанияКоммитаИзGit(ЗадачаМетеор, Выборка.ВерсияХранилища);
	
	КонецЦикла; 

КонецПроцедуры

Процедура ЗагрузитьЗамечанияКоммитаИзGit(ЗадачаМетеор, Коммит) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Коммит", Коммит);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХешиGitВерсийХранилища.Хеш КАК ХэшКоммита,
	|	ВЫБОР
	|		КОГДА ИсторияХранилища.Владелец.БазовоеХранилище = ЗНАЧЕНИЕ(Справочник.Хранилища.ПустаяСсылка)
	|			ТОГДА ИсторияХранилища.Владелец.ПроектGit.Код
	|		ИНАЧЕ ИсторияХранилища.Владелец.БазовоеХранилище.ПроектGit.Код
	|	КОНЕЦ КАК ИдентификаторПроектаГитЛаб
	|ИЗ
	|	Справочник.ИсторияХранилища КАК ИсторияХранилища
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ХешиGitВерсийХранилища КАК ХешиGitВерсийХранилища
	|		ПО (ХешиGitВерсийХранилища.ВерсияХранилища = ИсторияХранилища.Ссылка)
	|ГДЕ
	|	ИсторияХранилища.Ссылка = &Коммит";
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ПараметрыАдреса = Новый Структура("ИдентификаторПроектаГитЛаб, ХэшКоммита");
	ЗаполнитьЗначенияСвойств(ПараметрыАдреса, Выборка);
	
	ДанныеОтвета = АвтоматизированнаяПроверкаКода.ВыполнитьЗапросКGit("comments", ПараметрыАдреса);
	
	Если ДанныеОтвета.КодСостояния < 300  Тогда
		
		Для каждого Замечание Из ДанныеОтвета.Результат Цикл
		
			Если Не ЗначениеЗаполнено(Замечание.path)
				И Замечание.author.username = "gitsync" Тогда
			
				Продолжить; // Пропускаем общие замечания от Сонара
			
			КонецЕсли; 
			
			ДатаЗамечания = XMLЗначение(Тип("Дата"), Замечание.created_at);
			Автор = Справочники.Пользователи.НайтиПоКоду(Замечание.author.username);
			
			НаборЗаписей = РегистрыСведений.ЗамечанияКоммита.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ЗадачаМетеор.Установить(ЗадачаМетеор);
			НаборЗаписей.Отбор.Коммит.Установить(Коммит);
			НаборЗаписей.Отбор.Дата.Установить(ДатаЗамечания);
			НаборЗаписей.Отбор.ИсточникЗамечаний.Установить(Перечисления.ИсточникиЗамечаний.ПроверкаКода);
			
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() Тогда
				Запись = НаборЗаписей[0];
			Иначе
				Запись = НаборЗаписей.Добавить();
			КонецЕсли;
			
			Запись.ЗадачаМетеор = ЗадачаМетеор;
			Запись.Коммит = Коммит;
			Запись.Дата = ДатаЗамечания;
			Запись.ИсточникЗамечаний = Перечисления.ИсточникиЗамечаний.ПроверкаКода;
			
			Запись.Автор = Автор;
			
			Запись.Замечание = Замечание.note;
			Запись.ИмяОбъекта = Замечание.path;
			Запись.НомерСтрокиОбъекта= Замечание.line;
			Запись.Критичное = СтрНачинаетсяС(СокрЛП(Запись.Замечание), "!");
			
			НаборЗаписей.Записать();
		
		КонецЦикла; 
	Иначе
		Сообщить(ДанныеОтвета.Тело);
	КонецЕсли;

КонецПроцедуры
 
#КонецЕсли
