#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	ЭтоНаборУдаления = Количество() = 0; 
	Если ЭтоНаборУдаления Тогда
		ДополнительныеСвойства.Вставить("БылоУдаление");
	КонецЕсли;
	
	Если ЭтоНаборУдаления Или Не ДополнительныеСвойства.Свойство("БылоУдаление") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ИСТИНА
			|ИЗ
			|	РегистрСведений.ХешиGitВерсийХранилища КАК ХешиGitВерсийХранилища
			|ГДЕ
			|	ХешиGitВерсийХранилища.ВерсияХранилища = &ВерсияХранилища";
		Запрос.УстановитьПараметр("ВерсияХранилища", Отбор.ВерсияХранилища.Значение);
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			ДополнительныеСвойства.Вставить("ВерсияБылаВыгруженаВGit");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	Если Количество() И Не ДополнительныеСвойства.Свойство("ВерсияБылаВыгруженаВGit") Тогда
		Мониторинг.ЗаписатьЗавершениеОперации(
			Справочники.КлючевыеОперацииМониторинга.СинхронизацияХранилищаС_GIT,
			Отбор.ВерсияХранилища.Значение,
			ЭтотОбъект[0].Хеш);
	КонецЕсли;
		
	ЗарегистрироватьВ_BSLLS();
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьВ_BSLLS()

	Если БлокировкаРаботыСВнешнимиРесурсамиУКПовтИсп.ЭтоКопияБазы() Тогда
		Сообщить("В копии заблокированна регистрация в BSL LS");
		Возврат;
	КонецЕсли;
	
	Для каждого Запись Из ЭтотОбъект Цикл
		СинтаксическаяПроверкаBSLLS.ЗарегистрироватьКоммит(Запись.ВерсияХранилища, Запись.Хеш);
	КонецЦикла;

КонецПроцедуры
 
#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли