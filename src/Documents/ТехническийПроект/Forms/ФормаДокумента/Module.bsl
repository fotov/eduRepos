

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого Строка Из объект.Изменения Цикл
		Строка.ТипОбъектаПредыдущий = Строка.ТипОбъекта;
	КонецЦикла;
	
КонецПроцедуры

#Область ТабличнаяЧастьИзменения
&НаКлиенте
Процедура ИзмененияОбъектПриИзменении(Элемент)
	
	ТекДанные = Элементы.Изменения.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Объект) И ТипЗнч(ТекДанные.Объект) = Тип("СправочникСсылка.ОбъектыМетаданных") Тогда
		Реквизиты = ЗначениеРеквизитовОбъекта(ТекДанные.Объект, "ТипОбъекта,Владелец,Владелец.Платформа");
		ТекДанные.ТипОбъекта = Реквизиты.ТипОбъекта;
		ТекДанные.Конфигурация = Реквизиты.Владелец;
		ТекДанные.Платформа = Реквизиты.ВладелецПлатформа;
	КонецЕсли;
	
КонецПроцедуры

//При Добавлении объект вводится строкой в остальных случаях выбирается из справочника
&НаКлиенте
Процедура ИзмененияПередНачаломИзменения(Элемент, Отказ)
	
	УстановитьДоступныетипыПоляОбъект();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияДействиеПриИзменении(Элемент)
	
	УстановитьДоступныетипыПоляОбъект();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступныетипыПоляОбъект()
	
	ТекущиеДанные = Элементы.Изменения.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Действие) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Действие = ПредопределенноеЗначение("Справочник.ДействияСОбъектами.Добавление") Тогда
	 	 М = Новый Массив;
		 М.Добавить(Тип("Строка"));
         Элементы.ИзмененияОбъект.ОграничениеТипа = Новый ОписаниеТипов(М);
	Иначе
		 М = Новый Массив;
		 М.Добавить(Тип("СправочникСсылка.ОбъектыМетаданных"));
	     Элементы.ИзмененияОбъект.ОграничениеТипа = Новый ОписаниеТипов(М);
	КонецЕсли; 
	ТекущиеДанные.Объект = Элементы.ИзмененияОбъект.ОграничениеТипа.Привестизначение(ТекущиеДанные.Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитовОбъекта(Ссылка, Реквизиты)
	Возврат Новый ФиксированнаяСтруктура(ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, Реквизиты));	
КонецФункции

&НаКлиенте
Процедура ИзмененияКонфигурацияПриИзменении(Элемент)
	
	ТекДанные = Элементы.Изменения.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Конфигурация)  Тогда
		Реквизиты = ЗначениеРеквизитовОбъекта(ТекДанные.Конфигурация, "Платформа");
		ТекДанные.Платформа = Реквизиты.Платформа;		
	Иначе
		ТекДанные.Платформа = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзмененияОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ОбъектыМетаданных.ФормаВыбора", Новый Структура("Отбор",Новый Структура("Владелец", Элементы.Изменения.ТекущиеДанные.Конфигурация)),Элемент);
КонецПроцедуры

#КонецОбласти

#Область ТабличнаяЧастьКонфигурации
&НаКлиенте
Процедура КонфигурацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СписокВыбора = Элементы.ИзмененияКонфигурация.СписокВыбора;
	СписокВыбора.Очистить();
	Если Объект.Конфигурации.Количество() = 0 Тогда
		СписокВыбора.Добавить("<Выберите конфигурации>");
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаКонфигурация Из Объект.Конфигурации Цикл
		СписокВыбора.Добавить(СтрокаКонфигурация.Конфигурация);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область Связь_Изменения_СвойстваМатрицаПрав
&НаКлиенте
Процедура ИзмененияПриАктивизацииСтроки(Элемент)
	ТекДанные = Элемент.ТекущиеДанные;
	УстановитьОтборПоКлючу(ТекДанные, Элементы.СвойстваОбъекта, "Ключ");
	УстановитьОтборПоКлючу(ТекДанные, Элементы.МатрицаПрав, "Ключ");
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияПередУдалением(Элемент, Отказ)
	ОбщаяПроцедураУдалитьСтроки(Элемент.ТекущиеДанные, Объект.СвойстваОбъекта, "Ключ");
	ОбщаяПроцедураУдалитьСтроки(Элемент.ТекущиеДанные, Объект.МатрицаПрав, "Ключ");
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекДанные = Элемент.ТекущиеДанные;		
	Если НоваяСтрока ТОгда
		ТекДанные.Ключ = Новый УникальныйИдентификатор();
	КонецЕсли;
		
	УстановитьОтборПоКлючу(ТекДанные,Элементы.СвойстваОбъекта, "Ключ");	
	УстановитьОтборПоКлючу(ТекДанные,Элементы.МатрицаПрав, "Ключ");	
	
	Если ТекДанные.ТипОбъекта <> ТекДанные.ТипОбъектаПредыдущий Тогда
		ПерезаполнитьСвойства(ТекДанные.Ключ, ТекДанные.ТипОбъекта, ТекДанные.Действие);
		ТекДанные.ТипОбъектаПредыдущий = ТекДанные.ТипОбъекта;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоКлючу(ТекДанные, ТекЭлем, НаименованиеКлюча)
	
	Если ТекДанные = Неопределено Тогда
 		Возврат;
	КонецЕсли;

	Отбор = Новый Структура;
	Отбор.Вставить("Ключ", ТекДанные["Ключ"]);
	ТекЭлем.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбщаяПроцедураУдалитьСтроки(ТекДанные, ТекЭлем, НаименованиеКлюча)
	Если ТекДанные <> Неопределено Тогда
		МассивСтрок = ТекЭлем.НайтиСтроки(Новый Структура (НаименованиеКлюча,ТекДанные[НаименованиеКлюча]));
		Для Каждого СтрМассива ИЗ МассивСтрок Цикл
			ТекЭлем.Удалить(СтрМассива);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьСвойства(Ключ, ТипОбъекта, ДействиеСОбъектом)
	
	Если НЕ ЗначениеЗаполнено(ТипОбъекта) ТОгда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СвойстваОбъектовТипыОбъектов.Ссылка КАК Ссылка
	               |ИЗ
	               |	ПланВидовХарактеристик.СвойстваОбъектов.ДействияСОбъектами КАК СвойстваОбъектовДействияСОбъектами
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СвойстваОбъектов.ТипыОбъектов КАК СвойстваОбъектовТипыОбъектов
	               |		ПО СвойстваОбъектовДействияСОбъектами.Ссылка = СвойстваОбъектовТипыОбъектов.Ссылка
	               |ГДЕ
	               |	СвойстваОбъектовТипыОбъектов.ТипОбъекта = &ТипОбъекта
	               |	И НЕ СвойстваОбъектовТипыОбъектов.Ссылка.ПометкаУдаления
	               |	И СвойстваОбъектовДействияСОбъектами.ДействиеСОбъектом = &ДействиеСОбъектом";
	
	Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъекта);
	Запрос.УстановитьПараметр("ДействиеСОбъектом", ДействиеСОбъектом);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Кол = Объект.СвойстваОбъекта.Количество();
	Если Кол > 0 Тогда
		Для Н = 1 По Кол Цикл
			Если Объект.СвойстваОбъекта[Кол-Н].Ключ = Ключ Тогда
				Объект.СвойстваОбъекта.Удалить(Объект.СвойстваОбъекта[Кол-Н]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		Нов = Объект.СвойстваОбъекта.Добавить();
		Нов.Ключ = Ключ;
		Нов.Свойство = Выборка.Ссылка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПравПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Элементы.Изменения.ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПравПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.Ключ = Элементы.Изменения.ТекущиеДанные.Ключ;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область МножественныйПодборОбъектов
&НаКлиенте
Процедура ПодборОбъектов(Команда)
	
	СписокКонфигураций = Новый СписокЗначений;
	Для каждого Элемент Из Объект.Конфигурации Цикл
		СписокКонфигураций.Добавить(Элемент.Конфигурация);
	КонецЦикла;	
	
	ОткрытьФорму("Справочник.ОбъектыМетаданных.ФормаВыбора", Новый Структура("СписокКонфигураций,МножественныйВыбор,РежимВыбора,ЗакрыватьПриВыборе", СписокКонфигураций, Истина, Истина, Ложь), Элементы.Изменения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзмененияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Элемент Из ВыбранноеЗначение Цикл
			ДобавитьОбъектИзменений(Элемент);			
		КонецЦикла;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОбъектыМетаданных") Тогда
		ДобавитьОбъектИзменений(ВыбранноеЗначение);			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбъектИзменений(ОбъектСсылка) 
	
	Реквизиты = ЗначениеРеквизитовОбъекта(ОбъектСсылка, "Владелец.Платформа,Владелец,ТипОбъекта");
	Нов = Объект.Изменения.Добавить();
	Нов.Действие = ПредопределенноеЗначение("Справочник.ДействияСОбъектами.Изменение");
	Нов.Конфигурация = Реквизиты.Владелец; 
	Нов.ТипОбъекта = Реквизиты.ТипОбъекта;
	Нов.Объект = ОбъектСсылка;
	Нов.Платформа = Реквизиты.ВладелецПлатформа; 
	Нов.Ключ = Новый УникальныйИдентификатор;
	
	ПерезаполнитьСвойства(Нов.Ключ, Нов.ТипОбъекта, Нов.Действие);  
	
КонецПроцедуры

#КонецОбласти
