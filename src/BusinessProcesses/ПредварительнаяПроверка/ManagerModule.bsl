#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ЗадачаВыполнима(Задача, ТочкаМаршрута) Экспорт
	
	ЗадачаВыполнима = Истина;
	ЗадачаМетеор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Задача, "БизнесПроцесс.ЗадачаМетеор");
	
	Если ТочкаМаршрута = БизнесПроцессы.ПредварительнаяПроверка.ТочкиМаршрута.ОжиданиеЗагрузкиКоммитов Тогда
		ЗадачиМетеорЗагружены = Справочники.ИсторияХранилища.ЗадачиМетеорЗагружены(Задача.Дата, Задача.БизнесПроцесс.ЗадачаМетеор);
	КонецЕсли;
	
	Возврат ЗадачаВыполнима;
	
КонецФункции

Функция МожноАвтозавершитьЗадачу(Задача, ТочкаМаршрута) Экспорт
	
	Можно = Ложь;
	
	Возврат Можно;
	
КонецФункции

Функция ОсновнойСтатус() Экспорт
	
	Возврат Перечисления.СтатусыИсторииХранилищ.ПредварительнаяПроверка;
	
КонецФункции

Процедура ПриАвтозавершении(Задача, ТочкаМаршрута) Экспорт
	
	Если ТочкаМаршрута = БизнесПроцессы.ПредварительнаяПроверка.ТочкиМаршрута.ПроверкаКода Тогда
		БизнесПроцессы.СогласованиеПереноса.Согласовать(Задача, Истина);
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.ПредварительнаяПроверка.ТочкиМаршрута.ОжиданиеЗагрузкиКоммитов Тогда
		// Только в задачах SQL разрешено завершать эту точку.
		// Дополнительных действий не требуется, т.к. выполнение задачи производится в вызывающем коде.
	Иначе
		ВызватьИсключение(СтрШаблон("Для точки маршрута %1 не задан алгоритм ПриАвтозавершении!", ТочкаМаршрута));
	КонецЕсли;
	
КонецПроцедуры

Функция ЕстьАктивныйПроцесс(ЗадачаМетеор, ПроцессИсключения = Неопределено) Экспорт
	
	Возврат ЗначениеЗаполнено(АктивныйПроцесс(ЗадачаМетеор, ПроцессИсключения));
	
КонецФункции

Функция АктивныйПроцесс(ЗадачаМетеор, ПроцессИсключения = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПредварительнаяПроверка.Ссылка КАК Ссылка
	|ИЗ
	|	БизнесПроцесс.ПредварительнаяПроверка КАК ПредварительнаяПроверка
	|ГДЕ
	|	ПредварительнаяПроверка.Стартован
	|	И НЕ ПредварительнаяПроверка.Завершен
	|	И НЕ ПредварительнаяПроверка.ПометкаУдаления
	|	И ПредварительнаяПроверка.ЗадачаМетеор = &ЗадачаМетеор
	|	И НЕ ПредварительнаяПроверка.Ссылка = &ПроцессИсключения";
	Запрос.УстановитьПараметр("ЗадачаМетеор", ЗадачаМетеор);
	Запрос.УстановитьПараметр("ПроцессИсключения", ПроцессИсключения);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		АктивныйПроцесс = Выборка.Ссылка;
	Иначе
		АктивныйПроцесс = БизнесПроцессы.ПредварительнаяПроверка.ПустаяСсылка();
	КонецЕсли;
	Возврат АктивныйПроцесс;
	
КонецФункции

Функция АдресПолучателя(БизнесПроцесс) Экспорт
	
	Адреса = Справочники.ИсторияХранилища.АдресаАвторовКоммитов(БизнесПроцесс.Коммиты.ВыгрузитьКолонку("Коммит"));
	
	Если ЗначениеЗаполнено(БизнесПроцесс.Аналитик.email) Тогда
		Адреса.Добавить(БизнесПроцесс.Аналитик.email);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(БизнесПроцесс.Разработчик.email) Тогда
		Адреса.Добавить(БизнесПроцесс.Разработчик.email);
	КонецЕсли;
	
	Адреса = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Адреса);
	Возврат СтрСоединить(Адреса, ";");
	
КонецФункции

#КонецОбласти

#КонецЕсли
