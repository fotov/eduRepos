
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьОценку();
	
	ЗадачаМетеор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.БизнесПроцесс, "ЗадачаМетеор");
	ОписаниеЗадачи = Справочники.ЗадачиМетеор.ПолучитьПредставлениеЗадачиВHTML(ЗадачаМетеор);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	//ШаблонПоля = "Оценка[%1].Исполнитель";
	//ШаблонСообщения = "Поле ""Исполнитель"" не заполнено. Вид проверки: %1.";
	//Для Каждого ЭлементОценки Из Оценка Цикл
	//	Если Истина
	//			И ЭлементОценки.Исполнитель.Пустая()
	//			И Не ЭлементОценки.Результат = Перечисления.ВариантыРезультатовПроверкиДокументации.ПроверкаНеТребуется Тогда
	//		ТекстСообщения = СтрШаблон(ШаблонСообщения, ЭлементОценки.ВидПроверки);
	//		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, СтрШаблон(ШаблонПоля, Оценка.Индекс(ЭлементОценки)),, Отказ);
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ПараметрыЗаписи.ВыполнитьЗадачу Тогда
		ЗаписатьРезультатПроверкиДокументации();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РезультатыПроверкиДокументацииСрезПоследних.ЗадачаМетеор КАК ЗадачаМетеор,
		|	ПРЕДСТАВЛЕНИЕ(РезультатыПроверкиДокументацииСрезПоследних.Исполнитель) КАК Исполнитель,
		|	ПРЕДСТАВЛЕНИЕ(РезультатыПроверкиДокументацииСрезПоследних.ВидПроверки) КАК ВидПроверки,
		|	ПРЕДСТАВЛЕНИЕ(РезультатыПроверкиДокументацииСрезПоследних.Результат) КАК Результат,
		|	РезультатыПроверкиДокументацииСрезПоследних.Комментарий КАК Комментарий
		|ИЗ
		|	РегистрСведений.РезультатыПроверкиДокументации.СрезПоследних(&Период, ЗадачаМетеор = &ЗадачаМетеор) КАК РезультатыПроверкиДокументацииСрезПоследних";
	
	Запрос.УстановитьПараметр("ЗадачаМетеор", ЗадачаМетеор);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ШаблонКомментария = "Проведена проверка документации." "  Вид проверки: %1" "  Исполнитель: %2" "  Результат: %3" "  Комментарий: %4";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Комментарий = СтрШаблон(
			ШаблонКомментария,
			ВыборкаДетальныеЗаписи.ВидПроверки,
			ВыборкаДетальныеЗаписи.Исполнитель,
			ВыборкаДетальныеЗаписи.Результат,
			ВыборкаДетальныеЗаписи.Комментарий);
		ИнтеграцияСМетеор.ОтправитьФорматированныйКомментарийВМетеор(ЗадачаМетеор, Комментарий);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Оценка

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выполнена(Команда)

	ОчиститьСообщения();
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Записать(Новый Структура("ВыполнитьЗадачу", Истина)) Тогда
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Выполнение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		
		ОповеститьОбИзменении(Объект.Ссылка);
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОценку()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыПроверокДокументации.Ссылка КАК ВидПроверки,
		|	&РезультатПроверкиПоУмолчанию КАК Результат
		|ИЗ
		|	Справочник.ВидыПроверокДокументации КАК ВидыПроверокДокументации";
	
	Запрос.УстановитьПараметр("РезультатПроверкиПоУмолчанию",
		Перечисления.ВариантыРезультатовПроверкиДокументации.НеСогласовано);
	
	Оценка.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРезультатПроверкиДокументации()
	
	ПериодПроверки = ТекущаяДатаСеанса();
	АвторОценки = Пользователи.ТекущийПользователь();
	Для Каждого ЭлементОценки Из Оценка Цикл
		Менеджер = РегистрыСведений.РезультатыПроверкиДокументации.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Менеджер, ЭлементОценки, "Исполнитель,ВидПроверки,Результат,Комментарий,ПояснениеДляПроверяющего,НомерЗадачиТехдолг");
		Менеджер.ЗадачаМетеор = ЗадачаМетеор;
		Менеджер.Период = ПериодПроверки;
		Менеджер.АвторОценки = АвторОценки;
		Менеджер.Записать();
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти