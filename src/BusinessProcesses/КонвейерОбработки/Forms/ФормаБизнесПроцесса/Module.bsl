#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ПоследнийЗагруженныйКоммит.ТолькоПросмотр = БлокировкаРаботыСВнешнимиРесурсамиУКПовтИсп.ЭтоКопияБазы() = Ложь;
	Элементы.ПоследнийПроверенныйКоммит.ТолькоПросмотр = БлокировкаРаботыСВнешнимиРесурсамиУКПовтИсп.ЭтоКопияБазы() = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.РучнойЗапуск = Истина;
	КонецЕсли;
	ОписаниеЗадачи = БизнесПроцессы.КонвейерОбработки.ПолучитьПредставлениеЗадачиВHTML(Объект.Ссылка);
	
	Если ЗначениеЗаполнено(Объект.ЗамечаниеHTML_ПроверкаСинтаксическогоКонтроля) Тогда
		Элементы.ГруппаПроверкаСинтаксическогоКонтроля.Показать();
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ЗамечаниеHTML_ПроверкаПайплайна) Тогда
		Элементы.ГруппаПроверкаПайплайна.Показать();
	КонецЕсли;
	
	ВложенныеБизнесПроцессы.Параметры.Элементы.Найти("БизнесПроцесс").Использование = Истина;
	ВложенныеБизнесПроцессы.Параметры.Элементы.Найти("БизнесПроцесс").Значение = Объект.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	СхемаБП = ТекущийОбъект.ПолучитьКартуМаршрута();
	Замечение_ПроверкаСинтаксическогоКонтроля.УстановитьHTML(ТекущийОбъект.ЗамечаниеHTML_ПроверкаСинтаксическогоКонтроля, ПолучитьВложенияHTML(ТекущийОбъект.ЗамечаниехзВложения_ПроверкаСинтаксическогоКонтроля));
	Элементы.Замечение_ПроверкаСинтаксическогоКонтроля.Видимость = ЗначениеЗаполнено(Замечение_ПроверкаСинтаксическогоКонтроля.ПолучитьТекст());
	Замечение_ПроверкаПайплайна.УстановитьHTML(ТекущийОбъект.ЗамечаниеHTML_ПроверкаПайплайна, ПолучитьВложенияHTML(ТекущийОбъект.ЗамечаниехзВложения_ПроверкаПайплайна));
	Элементы.Замечение_ПроверкаПайплайна.Видимость = ЗначениеЗаполнено(Замечение_ПроверкаПайплайна.ПолучитьТекст());
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Параметр = Объект.Ссылка Тогда
		Прочитать();
		ОбновитьСхемуНаСервере();
		Элементы.ВложенныеБизнесПроцессы.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	РазблокироватьДанныеФормыДляРедактирования();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	ПроектПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВнутреннийИдентификаторКонвейераОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НачатьЗапускПриложения(Новый ОписаниеОповещения, 
		КаталогРезультатовПайплайнов(Объект.Хранилище)+Объект.ВнутреннийИдентификаторКонвейера);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонвейерНажатие(Элемент)
	НачатьЗапускПриложения(Новый ОписаниеОповещения, URLКонвейера());
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКаталогРезультатовНажатие(Элемент)
	НачатьЗапускПриложения(Новый ОписаниеОповещения, ПутьКРезультатамПайплайна());
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеЗадачиПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	РаботаСФормамиКлиент.ОбработкаКликаПоСсылке(Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьШаг(Команда)
	Если Модифицированность Тогда
		Сообщить("Надо записать");
		Возврат;
	КонецЕсли;
	Прочитать();
	ВыполнитьШагНаСервере();
	Прочитать();
	ОбновитьСхему(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСхему(Команда)
	Прочитать();
	ОбновитьСхемуНаСервере();
	ТекущийЭлемент = Элементы.СхемаБП;
КонецПроцедуры

&НаКлиенте
Процедура ПроверенныеКоммиты(Команда)
	ОткрытьФорму("РегистрСведений.ПоследниеПроверенныеКоммиты.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПеренесенныеКоммиты(Команда)
	ЗаполнитьПеренесенныеКоммитыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВозможностьИзменения(Команда)
	
	Элементы.ПоследнийЗагруженныйКоммит.ТолькоПросмотр = Ложь;
	Элементы.ПоследнийПроверенныйКоммит.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезапуститьПодготовкуТестовыхБаз(Команда)
	ПерезапуститьПодготовкуТестовыхБазНаСервере();
	Прочитать();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроектПриИзмененииНаСервере()
	Объект.Хранилище = Объект.Конфигурация.ХранилищеОбновления;
	Данные = БизнесПроцессы.КонвейерОбработки.ПолучитьДанныеПоПеренесеннымИПровереннымКоммитам(Объект.Хранилище);
	Объект.ПоследнийПроверенныйКоммит = Данные.ПоследнийПроверенныйКоммит;
	Объект.ПоследнийЗагруженныйКоммит = Данные.ПоследнийЗагруженныйКоммит;
	Объект.ПеренесенныеКоммиты.Загрузить(Данные.ПеренесенныеКоммиты);
	Объект.ШагиКонвейера.Загрузить(Объект.Конфигурация.ШагиКонвейера.Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ВыполнитьШагНаСервере()
	КонвейерОбработкиСервер.ВыполнитьШагБизнесПроцесса(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСхемуНаСервере()
	СхемаБП = РеквизитФормыВЗначение("Объект").ПолучитьКартуМаршрута();
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуНаЗадачу(ТочкаМаршрута)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка КАК Ссылка
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
		|	И ЗадачаИсполнителя.ТочкаМаршрута = &ТочкаМаршрута";
	Запрос.УстановитьПараметр("БизнесПроцесс", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Если ТочкаМаршрута.Вид = ВидТочкиМаршрутаБизнесПроцесса.Действие Тогда
		Задача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
		Задача.БизнесПроцесс = Объект.Ссылка;
		Задача.ТочкаМаршрута = ТочкаМаршрута;
		Задача.Наименование = Задача.ТочкаМаршрута;
		Задача.Дата = ТекущаяДатаСеанса();
		Задача.РольИсполнителя = ТочкаМаршрута.РольИсполнителя;
		Задача.Записать();
		Возврат Задача.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура СхемаБПВыбор(Элемент)
	Задача = ПолучитьСсылкуНаЗадачу(Элемент.ТекущийЭлемент.Значение);
	Если ЗначениеЗаполнено(Задача) Тогда
		ПоказатьЗначение(, Задача);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПеренесенныеКоммитыНаСервере()
	ТЗ = БизнесПроцессы.КонвейерОбработки.ПолучитьДанныеПоПеренесеннымИПровереннымКоммитам(Объект.Хранилище).ПеренесенныеКоммиты;
	Объект.ПеренесенныеКоммиты.Загрузить(ТЗ);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВложенияHTML(хзВложения)
	
	Вложения = хзВложения.Получить();
	Если ТипЗнч(Вложения) = Тип("Структура") Тогда	
		Возврат Вложения;
	Иначе
		Возврат Новый Структура;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция КаталогРезультатовПайплайнов(Хранилище)
	Возврат Хранилище.КаталогРезультатовПайплайнов;
КонецФункции

&НаСервере
Функция URLКонвейера()
	Возврат КонвейерОбработкиСервер.URLКонвейера(Объект.Хранилище, Объект.ИдентификаторКонвейера);
КонецФункции

&НаСервере
Функция ПутьКРезультатамПайплайна()
	Возврат КонвейерОбработкиСервер.ПутьКРезультатамПайплайна(Объект.Хранилище, Объект.ИдентификаторКонвейера, Объект.ВнутреннийИдентификаторКонвейера);
КонецФункции

&НаСервере
Процедура ПерезапуститьПодготовкуТестовыхБазНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка КАК Задача
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.БизнесПроцесс = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	ВыборкаЗадачи = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗадачи.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаЗадачи.Задача) Тогда
			Продолжить;
		КонецЕсли;
		Задача = ВыборкаЗадачи.Задача.ПолучитьОбъект();
		Задача.Удалить();
	КонецЦикла;
	
	Объект.Стартован = Ложь;
	Объект.Завершен = Ложь;
	Объект.ОшибкаСозданияКлона = Ложь;
	Объект.Дата = ТекущаяДатаСеанса();
	Объект.Сообщения.Очистить();
	Для Каждого Стр Из Объект.ТестовыеБазы Цикл
		Стр.Подготовлена = Ложь;
		Стр.ОшибкаПроготовки = Ложь;
		Стр.Причина = "";
	КонецЦикла;
	
	Об = РеквизитФормыВЗначение("Объект");
	Об.Старт();
КонецПроцедуры

#КонецОбласти

