
#Область ПрограммныйИнтерфейс

Процедура ЗарегистрироватьКоммит(Ссылка, Хэш) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияХранилища.Код КАК Код,
		|	ИсторияХранилища.Комментарий КАК Комментарий,
		|	ВЫБОР
		|		КОГДА ИсторияХранилища.Владелец.БазовоеХранилище = ЗНАЧЕНИЕ(Справочник.Хранилища.ПустаяСсылка)
		|			ТОГДА ИсторияХранилища.Владелец.ПроектGit.Код
		|		ИНАЧЕ ИсторияХранилища.Владелец.БазовоеХранилище.ПроектGit.Код
		|	КОНЕЦ КАК ИдентификаторПроектаGit,
		|	ВЫБОР
		|		КОГДА ИсторияХранилища.Владелец.БазовоеХранилище = ЗНАЧЕНИЕ(Справочник.Хранилища.ПустаяСсылка)
		|			ТОГДА ИсторияХранилища.Владелец.ПроектGit.Сервер.АдресСервера
		|		ИНАЧЕ ИсторияХранилища.Владелец.БазовоеХранилище.ПроектGit.Сервер.АдресСервера
		|	КОНЕЦ КАК АдресСервераГит
		|ИЗ
		|	Справочник.ИсторияХранилища КАК ИсторияХранилища
		|ГДЕ
		|	ИсторияХранилища.Владелец.ВыгружатьВGit
		|	И НЕ ВЫБОР
		|				КОГДА ИсторияХранилища.Владелец.БазовоеХранилище = ЗНАЧЕНИЕ(Справочник.Хранилища.ПустаяСсылка)
		|					ТОГДА ИсторияХранилища.Владелец.ПроектGit.Код
		|				ИНАЧЕ ИсторияХранилища.Владелец.БазовоеХранилище.ПроектGit.Код
		|			КОНЕЦ = 0
		|	И ИсторияХранилища.Владелец В
		|			(ВЫБРАТЬ
		|				Конфигурации.ХранилищеРазработки КАК ХранилищеРазработки
		|			ИЗ
		|				Справочник.Конфигурации КАК Конфигурации)
		|	И ИсторияХранилища.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВерсииДополнений.Версия,
		|	ВерсииДополнений.Описание,
		|	ПроектыGIT.Код,
		|	ПроектыGIT.Сервер.АдресСервера
		|ИЗ
		|	Справочник.ВерсииДополнений КАК ВерсииДополнений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПроектыGIT КАК ПроектыGIT
		|		ПО (ПроектыGIT.Ссылка = &ПроектДополнений)
		|ГДЕ
		|	ВерсииДополнений.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПроектДополнений", Справочники.ПроектыGIT.Дополнения);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ВыборкаРеквизитыВерсии = РезультатЗапроса.Выбрать();
	ВыборкаРеквизитыВерсии.Следующий();
	
	ДанныеДляПубликации = Новый Структура;
	ДанныеДляПубликации.Вставить("CommitHash",			Хэш);
	ДанныеДляПубликации.Вставить("CommitDescription",	Формат(ВыборкаРеквизитыВерсии.Код, "ЧГ=") + " " + ВыборкаРеквизитыВерсии.Комментарий);
	ДанныеДляПубликации.Вставить("GitlabProjectCode",	ВыборкаРеквизитыВерсии.ИдентификаторПроектаGit);
	ДанныеДляПубликации.Вставить("GitlabURL",			ВыборкаРеквизитыВерсии.АдресСервераГит);
	
	ИмяСервера = "izb-app20";
	АдресРесурса = "/bsl-ls/hs/SyntaxCheck/RegisterCommit";
	АдресМетода = ИмяСервера + АдресРесурса;
	//ПараметрыАутентификации = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища("ИтилиумСервисСобытий", "Пользователь,Пароль");
	ДополнительныеПараметры = Новый Структура();
	//ДополнительныеПараметры.Вставить("Аутентификация", ПараметрыАутентификации);
	Ответ = КоннекторHTTP.Post(АдресМетода,	КоннекторHTTP.ОбъектВJson(ДанныеДляПубликации), ДополнительныеПараметры);
	
КонецПроцедуры

Функция ОшибкиПоКоммиту(Коммит) Экспорт

	ИмяСервера = "izb-app20";
	АдресРесурса = "bsl-ls/hs/SyntaxCheck/GetErrors";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХешиGitВерсийХранилища.Хеш КАК Хеш
		|ИЗ
		|	РегистрСведений.ХешиGitВерсийХранилища КАК ХешиGitВерсийХранилища
		|ГДЕ
		|	ХешиGitВерсийХранилища.ВерсияХранилища = &ОбъектПроверки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КоммитыДополненийСрезПоследних.Хеш
		|ИЗ
		|	РегистрСведений.КоммитыДополнений.СрезПоследних КАК КоммитыДополненийСрезПоследних
		|ГДЕ
		|	КоммитыДополненийСрезПоследних.ВерсияДополнения = &ОбъектПроверки";
	Запрос.УстановитьПараметр("ОбъектПроверки", Коммит);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение "Не удалось определить хэш по коммиту " + Коммит;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ДанныеДляПубликации = Новый Структура;
	ДанныеДляПубликации.Вставить("CommitHash", Выборка.Хеш);
	ТелоЗапроса = СтроковыеФункцииУККлиентСервер.ЗаписатьЗначениеJSON(ДанныеДляПубликации);
	
	Соединение = Новый HTTPСоединение(ИмяСервера);
	Запрос = Новый HTTPЗапрос(АдресРесурса);
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	Ответ = Соединение.Получить(Запрос);
	Если Ответ.КодСостояния >= 300 Тогда
		// Если система отвечает ошибкой, значит что-то не работает на стороне сервиса БСЛ-ЛС
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку();
	ТабличныйДокумент = ЗначениеИзСтрокиВнутр(ОтветСтрокой);
	Возврат ТабличныйДокумент;
	
КонецФункции 
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти


