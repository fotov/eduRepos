
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастроитьФорму(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьФорму(Форма)
	Форма.Элементы.ДополненияГруппаДействияРасширения.Доступность =
		(Форма.ТипДополнения = ПредопределенноеЗначение("Перечисление.ТипыДополнений.Расширение"));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БазаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ФиксированныеНастройки.Отбор,
		"АдресСервисаДополнений",
		"",
		ВидСравненияКомпоновкиДанных.Заполнено);
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("ФиксированныеНастройки", ФиксированныеНастройки);
	ПараметрыФормыВыбора.Вставить("ТекущаяСтрока", База);
	
	ОткрытьФорму("Справочник.Базы1С.ФормаВыбора", ПараметрыФормыВыбора, Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипДополненияПриИзменении(Элемент)
	НастроитьФорму(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДополнения

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьСостояниеДополнений(Команда)
	ПолучитьСостояниеДополненийНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДополнение(Команда)
	
	ТекущиеДанные = Элементы.Дополнения.ТекущиеДанные;
	ПараметрыОткрытияФормы = Новый Структура;
	Если Не ТекущиеДанные = Неопределено Тогда
		ПараметрыОткрытияФормы.Вставить("База", ТекущиеДанные.База);
		ПараметрыОткрытияФормы.Вставить("Дополнение", ТекущиеДанные.Дополнение);
	КонецЕсли;
	ДополнительныеПараметры = Новый Структура;
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("УстановитьДополнениеПослеВыбора", ЭтаФорма, ДополнительныеПараметры);
	// На случай открытия внешней обработки или из конфигурации, получаем корректное имя формы.
	ИмяФормыВыбораПараметров = СтрРазделить(ИмяФормы, ".")[0] + ".УправлениеДополнениями.Форма.ВыборПараметровУстановки";
	ОткрытьФорму(
		ИмяФормыВыбораПараметров,
		ПараметрыОткрытияФормы,
		ЭтаФорма,
		ЭтаФорма.УникальныйИдентификатор,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДополнение(Команда)
	
	ТекущиеДанные = Элементы.Дополнения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = СтруктураПараметровДополнения();
	ЗаполнитьЗначенияСвойств(ПараметрыОперации, ТекущиеДанные);
	
	УдалитьДополнениеНаСервере(ТекущиеДанные.База, ТекущиеДанные.ТипДополнения, ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьСостояниеДополнения(Команда)
	
	ТекущиеДанные = Элементы.Дополнения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СостояниеДополнения = СтруктураПараметровДополнения();
	ЗаполнитьЗначенияСвойств(СостояниеДополнения, ТекущиеДанные);
	
	ПереключитьСостояниеДополненияНаСервере(
		ТекущиеДанные.База, 
		ТекущиеДанные.ТипДополнения,
		СостояниеДополнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИУстановитьДополнение(Команда)
	
	ЗагрузитьДополнение(ПредопределенноеЗначение("Перечисление.ТипыДополнений.Расширение"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	НастроитьФорму(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПолучитьСостояниеДополненийНаСервере()
	
	ЗаполнитьСостояниеДополнений();
	
	ПолучитьНовыеДополнения();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСостояниеДополнений()
	
	Дополнения.Очистить();
	
	СостояниеДополнений = РаботаСДополнениями.ПолучитьСостояниеДополнений(ТипДополнения, База);
	ДополнитьСостояниеДополнений(СостояниеДополнений);
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьСостояниеДополнений(СостояниеДополнений)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СостояниеДополнений", СостояниеДополнений);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостояниеДополнений.База КАК База,
		|	СостояниеДополнений.ТипДополнения КАК ТипДополнения,
		|	СостояниеДополнений.Имя КАК Имя,
		|	СостояниеДополнений.ИмяФайла КАК ИмяФайла,
		|	СостояниеДополнений.Синоним КАК Синоним,
		|	СостояниеДополнений.Версия КАК Версия,
		|	СостояниеДополнений.БезопасныйРежим КАК БезопасныйРежим,
		|	СостояниеДополнений.ЗащитаОтОпасныхДействий КАК ЗащитаОтОпасныхДействий,
		|	СостояниеДополнений.УникальныйИдентификатор КАК УникальныйИдентификатор,
		|	СостояниеДополнений.Активно КАК Активно
		|ПОМЕСТИТЬ СостояниеДополнений
		|ИЗ
		|	&СостояниеДополнений КАК СостояниеДополнений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостояниеДополнений.База КАК База,
		|	СостояниеДополнений.ТипДополнения КАК ТипДополнения,
		|	СостояниеДополнений.Имя КАК Имя,
		|	СостояниеДополнений.ИмяФайла КАК ИмяФайла,
		|	СостояниеДополнений.Синоним КАК Синоним,
		|	СостояниеДополнений.Версия КАК Версия,
		|	СостояниеДополнений.БезопасныйРежим КАК БезопасныйРежим,
		|	СостояниеДополнений.ЗащитаОтОпасныхДействий КАК ЗащитаОтОпасныхДействий,
		|	СостояниеДополнений.УникальныйИдентификатор КАК УникальныйИдентификатор,
		|	СостояниеДополнений.Активно КАК Активно,
		|	ВЫБОР
		|		КОГДА СостояниеДополнений.Активно
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ИндексКартинки,
		|	ВерсииДополнений.Ссылка КАК ВерсияДополнения,
		|	ВерсииДополнений.Владелец КАК Дополнение,
		|	ВЫБОР
		|		КОГДА СостояниеДополнений.Активно
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияДополнений.Включено)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияДополнений.Отключено)
		|	КОНЕЦ КАК Состояние,
		|	ВерсииДополнений.Автор КАК Автор,
		|	ЗадачиМетеорДополнений.ЗадачаМетеор КАК ЗадачаМетеор
		|ИЗ
		|	СостояниеДополнений КАК СостояниеДополнений
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииДополнений КАК ВерсииДополнений
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиМетеорДополнений КАК ЗадачиМетеорДополнений
		|			ПО ЗадачиМетеорДополнений.ВерсияДополнения = ВерсииДополнений.Ссылка
		|		ПО СостояниеДополнений.Имя = ВерсииДополнений.Владелец.Наименование
		|			И СостояниеДополнений.Версия = ВерсииДополнений.Версия";
	
	Дополнения.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДополнениеНаСервере(База, ТипДополнения, ТекущееСостояние)
	
	ПараметрыОперации = Новый Структура("Имя, УникальныйИдентификатор");
	ЗаполнитьЗначенияСвойств(ПараметрыОперации, ТекущееСостояние);
	
	РаботаСДополнениями.УдалитьДополнение(База, ТипДополнения, ПараметрыОперации);
	ЗаполнитьСостояниеДополнений();
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьСостояниеДополненияНаСервере(База, ТипДополнения, ТекущееСостояние)
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("Активно", Не ТекущееСостояние.Активно);
	ПараметрыОперации.Вставить("УникальныйИдентификатор", ТекущееСостояние.УникальныйИдентификатор);
	
	РаботаСДополнениями.ИзменитьПараметрыДополнения(База, ТипДополнения, ПараметрыОперации, ТекущееСостояние);
	
	ЗаполнитьСостояниеДополнений();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДополнениеПослеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДополнительныеПараметры = Неопределено И ДополнительныеПараметры.Свойство("ДобавленныеДополнения") Тогда
		Для Каждого ДополнениеИВерсия Из ДополнительныеПараметры.ДобавленныеДополнения Цикл
			УстановитьДополнениеНаСервере(Результат.База, ДополнениеИВерсия.ВерсияДополнения);
		КонецЦикла;
	Иначе
		УстановитьДополнениеНаСервере(Результат.База, Результат.ВерсияДополнения);
	КонецЕсли;
	
	ЗаполнитьСостояниеДополнений();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьДополнениеНаСервере(База, ВерсияДополнения)
	РаботаСДополнениями.УстановитьДополнение(База, ВерсияДополнения);
КонецПроцедуры

&НаСервере
Процедура ПолучитьНовыеДополнения()
	
	// На данный момент получение только новых расширений
	ОтборНовых = Новый Структура(
		"ВерсияДополнения, ТипДополнения",
		Справочники.ВерсииДополнений.ПустаяСсылка(),
		ТипДополнения);
	СтрокиНовыхДополнений = Дополнения.НайтиСтроки(ОтборНовых);
	
	Если Не СтрокиНовыхДополнений.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	// Необходимо получать одинаковые дополнения только из одной базы, чтобы избежать дублирования
	НовыеДополнения = Дополнения.Выгрузить(СтрокиНовыхДополнений);
	ИменаНовыеДополнения = НовыеДополнения.Скопировать(, "Имя");
	ИменаНовыеДополнения.Свернуть("Имя");
	ДополненияКПолучению = Новый Массив;
	Для Каждого СтрокаИмениДополения Из ИменаНовыеДополнения Цикл
		ИмяДополнения = СтрокаИмениДополения.Имя;
		ДополненияКПолучению.Добавить(НовыеДополнения.Найти(ИмяДополнения, "Имя"));
	КонецЦикла;
	
	Если Не ДополненияКПолучению.Количество() Тогда
		Возврат;		
	КонецЕсли;
	РаботаСДополнениями.ПолучитьНовыеДополнения(ТипДополнения, ДополненияКПолучению);
	
	ДополнитьСостояниеДополнений(Дополнения.Выгрузить());
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтруктураПараметровДополнения()
	
	ПараметрыДополнения = Новый Структура;
	
	ПараметрыДополнения.Вставить("База");
	ПараметрыДополнения.Вставить("Дополнение");
	ПараметрыДополнения.Вставить("ВерсияДополнения");
	ПараметрыДополнения.Вставить("ТипДополнения");
	ПараметрыДополнения.Вставить("Активно");
	ПараметрыДополнения.Вставить("Имя");
	ПараметрыДополнения.Вставить("Синоним");
	ПараметрыДополнения.Вставить("Версия");
	ПараметрыДополнения.Вставить("УникальныйИдентификатор");

	Возврат ПараметрыДополнения;
	
КонецФункции

&НаКлиенте
Процедура ОтменитьИзмененияПоИстории(Команда)
	
	ТекущиеДанные = Элементы.ИсторияДополнений.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацииДополнений.Удаление") Тогда
		// Восстановление удалённого дополнения
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ВерсияДополнения) Тогда
			ТекстПредупреждения = СтрШаблон(
				"Версия удалённого дополнения не зарегистрирована в системе (%1).
				|Восстановление невозможно.",
				"Упрвление коммитами");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		ПараметрыУстановки = СтруктураПараметровДополнения();
		ЗаполнитьЗначенияСвойств(ПараметрыУстановки, ТекущиеДанные);
		УстановитьДополнениеПослеВыбора(ПараметрыУстановки, Новый Структура);
	ИначеЕсли ТекущиеДанные.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацииДополнений.Установка") Тогда
		ОтменитьИзмененияУдалитьДополнениеНаСервере(ТекущиеДанные);
	ИначеЕсли ТекущиеДанные.Операция = ПредопределенноеЗначение("Перечисление.ВидыОперацииДополнений.Изменение") Тогда
		ОтменитьИзмененияИзменитьДополнениеНаСервере(ТекущиеДанные);
	Иначе
		// Вызов для неавтоматизированной операции
		ПоказатьПредупреждение(, "Отмена выбранной операции не автоматизирована.");
		Возврат;
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ИсторияДополнений"));
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьИзмененияУдалитьДополнениеНаСервере(ТекущиеДанные)
	
	ИскомоеДополнение = РеквизитыДополнения(ТекущиеДанные);
	Если ИскомоеДополнение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СостояниеДополнения = СтруктураПараметровДополнения();
	ЗаполнитьЗначенияСвойств(СостояниеДополнения, ИскомоеДополнение);
	ЗаполнитьЗначенияСвойств(СостояниеДополнения, ТекущиеДанные);
	ПараметрыОперации = Новый Структура("Имя, УникальныйИдентификатор");
	ЗаполнитьЗначенияСвойств(ПараметрыОперации, СостояниеДополнения);
	
	УдалитьДополнениеНаСервере(
		ТекущиеДанные.База, 
		ТекущиеДанные.ТипДополнения,
		ПараметрыОперации);
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьИзмененияИзменитьДополнениеНаСервере(ТекущиеДанные)
	
	ИскомоеДополнение = РеквизитыДополнения(ТекущиеДанные);
	Если ИскомоеДополнение = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(
			"Не удалось получить информацию по выбранному дополнению." "Возможно оно отсутствует в базе.");
		Возврат;
	КонецЕсли;
		
	СостояниеДополнения = СтруктураПараметровДополнения();
	ЗаполнитьЗначенияСвойств(СостояниеДополнения, ИскомоеДополнение);
	ЗаполнитьЗначенияСвойств(СостояниеДополнения, ТекущиеДанные);
	ПараметрыОперации = Новый Структура("Активно, УникальныйИдентификатор");
	ЗаполнитьЗначенияСвойств(ПараметрыОперации, СостояниеДополнения);	
	
	ПереключитьСостояниеДополненияНаСервере(
		ТекущиеДанные.База, 
		ТекущиеДанные.ТипДополнения,
		ПараметрыОперации);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РеквизитыДополнения(ПараметрыПоиска)
	
	СостояниеДополнений = РаботаСДополнениями.ПолучитьСостояниеДополнений(ПараметрыПоиска.ТипДополнения, ПараметрыПоиска.База);
	ОтборИскомоеДополнение = Новый Структура("Имя, Версия", ПараметрыПоиска.Имя, ПараметрыПоиска.Версия);
	СтрокиИскомоеДополнение = СостояниеДополнений.НайтиСтроки(ОтборИскомоеДополнение);
	
	Если Не СтрокиИскомоеДополнение.Количество() Тогда
		ТекстСообщения = СтрШаблон(
			"В базе %1 не найдено расширение %2 версии %3",
			ПараметрыПоиска.База,
			ПараметрыПоиска.Имя,
			ПараметрыПоиска.Версия);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СтрокиИскомоеДополнение[0];
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьДополнение(ТипДополнения)
	
	ТекущиеДанные = Элементы.Дополнения.ТекущиеДанные;
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Режим", "ЗагрузитьИУстановить");
	ПараметрыОткрытияФормы.Вставить("ТипДополнения", ТипДополнения);
	Если Не ТекущиеДанные = Неопределено Тогда
		ПараметрыОткрытияФормы.Вставить("База", ТекущиеДанные.База);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("УстановитьДополнениеПослеВыбора", ЭтаФорма, ДополнительныеПараметры);
	ИмяФормыВыбораПараметров = СтрРазделить(ИмяФормы, ".")[0] + ".УправлениеДополнениями.Форма.ВыборПараметровУстановки";
	ФормаВыбораПараметров = ОткрытьФорму(
		ИмяФормыВыбораПараметров,
		ПараметрыОткрытияФормы,
		ЭтаФорма,
		ЭтаФорма.УникальныйИдентификатор,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти



