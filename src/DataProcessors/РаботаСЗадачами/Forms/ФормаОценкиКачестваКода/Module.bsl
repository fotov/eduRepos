
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Параметры.ЗадачаИсполнителя) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Не удалось определить бизнес процесс для оценки");
	КонецЕсли;
	БизнесПроцесс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЗадачаИсполнителя, "БизнесПроцесс");
	
	ОценкаПоУмолчанию = Перечисления.ЗначенияОценкиКачестваКода.ЗамечанийНет;
	ИнициализироватьТаблицуОценки();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ОценкиКачестваКода

&НаКлиенте
Процедура ОценкиКачестваЗначениеОценкиПриИзменении(Элемент)
	
	ИмяТекущейКолонки = Элементы[ИмяТаблицыОценка].ТекущийЭлемент.Имя;
	ИдентификаторСтроки = Элементы[ИмяТаблицыОценка].ТекущиеДанные.ПолучитьИдентификатор();
	ИзменяемаяСтрокаРеквизита = ЭтаФорма[ИмяТаблицыОценка].НайтиПоИдентификатору(ИдентификаторСтроки);
	Если Не Элементы[ИмяТаблицыОценка].ТекущиеДанные[ИмяТекущейКолонки] Тогда
		ИзменяемаяСтрокаРеквизита[ИмяТекущейКолонки] = Истина;
		Возврат;
	КонецЕсли;
	УстановленноеЗначение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ЗначениеОценкиПоИмениПоля, ИмяТекущейКолонки);
	Если УстановленноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ИзменяемаяСтрокаРеквизита = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Для Каждого ИмяКолонки Из ЗначениеОценкиПоИмениПоля Цикл
		ИзменяемаяСтрокаРеквизита[ИмяКолонки.Ключ] = ИмяКолонки.Ключ = ИмяТекущейКолонки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьИЗакрытьНаСервере();
	Закрыть(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПропуститьОценку(Команда)
	Закрыть(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОценкуНечегоОценивать(Команда)
	УстановитьОценкуДляВсех(ПредопределенноеЗначение("Перечисление.ЗначенияОценкиКачестваКода.НечегоОценивать"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОценкуЗамечанийНет(Команда)
	УстановитьОценкуДляВсех(ПредопределенноеЗначение("Перечисление.ЗначенияОценкиКачестваКода.ЗамечанийНет"));
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьОцениваемого(Команда)
	Оцениваемый = Ждать ВвестиЗначениеАсинх(ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"), "Введите пользователя для оценки.");
	ДобавитьОцениваемогоНаСервере(Оцениваемый);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьТаблицуОценки()
	
	// Имена колонок таблицы формы совпадают с именами колонок реквизита.
	ИмяТаблицыОценка = "ОценкаКачества";
	ИменаКолонок_ЗначенияОценки = Новый Соответствие;
	ЗначениеОценкиПоИмениКолонки = Новый Структура;
	ОписанияКолонокТаблицы = Новый Массив;
	РаботаСФормами.ДобавитьОписаниеКолонкиТаблицы(ОписанияКолонокТаблицы, "КритерийОценки", РаботаСФормами.ОписаниеТипаСправочник("ВидыОценокКачестваКода"));
	РаботаСФормами.ДобавитьОписаниеКолонкиТаблицы(ОписанияКолонокТаблицы, "Оцениваемый", РаботаСФормами.ОписаниеТипаСправочник("Пользователи"));
	Для Каждого ЗначениеПеречисления Из Метаданные.Перечисления.ЗначенияОценкиКачестваКода.ЗначенияПеречисления Цикл
		РаботаСФормами.ДобавитьОписаниеКолонкиТаблицы(ОписанияКолонокТаблицы, ЗначениеПеречисления.Имя, РаботаСФормами.ОписаниеТипаБулево(), ЗначениеПеречисления.Синоним);
		ИменаКолонок_ЗначенияОценки.Вставить(Перечисления.ЗначенияОценкиКачестваКода[ЗначениеПеречисления.Имя], ЗначениеПеречисления.Имя);
		ЗначениеОценкиПоИмениКолонки.Вставить(ЗначениеПеречисления.Имя, Перечисления.ЗначенияОценкиКачестваКода[ЗначениеПеречисления.Имя]);
	КонецЦикла;
	// Имена колонок в реквизите совпадают с именами полей в создаваемой таблице.
	ЗначениеОценкиПоИмениПоля = Новый ФиксированнаяСтруктура(ЗначениеОценкиПоИмениКолонки);
	ИменаКолонокЗначенияОценки = Новый ФиксированноеСоответствие(ИменаКолонок_ЗначенияОценки);
	РаботаСФормами.ДобавитьОписаниеКолонкиТаблицы(ОписанияКолонокТаблицы, "Комментарий", РаботаСФормами.ОписаниеТипаСтрока(0));
	РеквизитОценкаКачества = РаботаСФормами.ДобавитьРеквизитТаблицаЗначений(ЭтаФорма, ИмяТаблицыОценка, ОписанияКолонокТаблицы);
	ТаблицаФормы = РаботаСФормами.ДобавитьТаблицуФормы(ЭтаФорма, РеквизитОценкаКачества.Имя, Элементы.ГруппаОценкаКачества, РеквизитОценкаКачества.Имя);
	ТаблицаФормы.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	//#Если Сервер И Не Сервер Тогда
	//	ТаблицаФормы = Элементы.Добавить("выа", Тип("ТаблицаФормы"), ЭтаФорма);
	//#КонецЕсли
	ТаблицаФормы.КонтекстноеМеню.Доступность = Ложь;
	ТаблицаФормы.ИзменятьСоставСтрок = Ложь;

	ПутьКДаннымТаблицы = ТаблицаФормы.ПутьКДанным;
	Для Каждого Колонка Из ОписанияКолонокТаблицы Цикл
		ЭтоКолонкаЗначенияОценки = ЗначениеОценкиПоИмениКолонки.Свойство(Колонка.Имя);
		ВидПоляКолонки = ?(ЭтоКолонкаЗначенияОценки, ВидПоляФормы.ПолеФлажка, ВидПоляФормы.ПолеВвода);
		КолонкаТаблицыОценки = РаботаСФормами.ДобавитьКолонкуЭлемента(
			ЭтаФорма,
			Колонка.Имя,
			ТаблицаФормы,
			ПутьКДаннымТаблицы + "." + Колонка.Имя,
			ВидПоляКолонки,
			Колонка.Заголовок);
		Если ЭтоКолонкаЗначенияОценки Тогда
			КолонкаТаблицыОценки.УстановитьДействие("ПриИзменении", "ОценкиКачестваЗначениеОценкиПриИзменении");	
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Пользователи.Ссылка КАК Разработчик
		|ПОМЕСТИТЬ Оцениваемые
		|ИЗ
		|	БизнесПроцесс.СогласованиеПереноса КАК СогласованиеПереноса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиМетеорВерсийХранилища КАК ЗадачиМетеорВерсийХранилища
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсторияХранилища КАК ИсторияХранилища
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|				ПО ИсторияХранилища.Автор = Пользователи.Код
		|			ПО ЗадачиМетеорВерсийХранилища.ВерсияХранилища = ИсторияХранилища.Ссылка
		|		ПО СогласованиеПереноса.ЗадачаМетеор = ЗадачиМетеорВерсийХранилища.ЗадачаМетеор
		|ГДЕ
		|	СогласованиеПереноса.Ссылка = &БизнесПроцесс
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Пользователи.Ссылка
		|ИЗ
		|	БизнесПроцесс.ПредварительнаяПроверка КАК ПредварительнаяПроверка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиМетеорВерсийХранилища КАК ЗадачиМетеорВерсийХранилища
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсторияХранилища КАК ИсторияХранилища
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|				ПО ИсторияХранилища.Автор = Пользователи.Код
		|			ПО ЗадачиМетеорВерсийХранилища.ВерсияХранилища = ИсторияХранилища.Ссылка
		|		ПО ПредварительнаяПроверка.ЗадачаМетеор = ЗадачиМетеорВерсийХранилища.ЗадачаМетеор
		|ГДЕ
		|	ПредварительнаяПроверка.Ссылка = &БизнесПроцесс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыОценокКачестваКода.Ссылка КАК КритерийОценки,
		|	Оцениваемые.Разработчик КАК Исполнитель
		|ПОМЕСТИТЬ КритерииСИсполнителями
		|ИЗ
		|	Справочник.ВидыОценокКачестваКода КАК ВидыОценокКачестваКода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Оцениваемые КАК Оцениваемые
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КритерииСИсполнителями.КритерийОценки КАК КритерийОценки,
		|	КритерииСИсполнителями.Исполнитель КАК Оцениваемый,
		|	ЕСТЬNULL(ОценкиКачестваКода.Оценка, &ОценкаПоУмолчанию) КАК Оценка,
		|	ЕСТЬNULL(ОценкиКачестваКода.Комментарий, """") КАК Комментарий
		|ИЗ
		|	КритерииСИсполнителями КАК КритерииСИсполнителями
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОценкиКачестваКода КАК ОценкиКачестваКода
		|		ПО КритерииСИсполнителями.КритерийОценки = ОценкиКачестваКода.ВидОценки
		|			И КритерииСИсполнителями.Исполнитель = ОценкиКачестваКода.Оцениваемый
		|			И (ОценкиКачестваКода.БизнесПроцесс = &БизнесПроцесс)";
	Запрос.УстановитьПараметр("ОценкаПоУмолчанию", ОценкаПоУмолчанию);
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	Выборка = Запрос.Выполнить().Выбрать();
	ТаблицаОценка = ЭтаФорма[РеквизитОценкаКачества.Имя];
	Пока Выборка.Следующий() Цикл
		ИмяКолонкиЗначенияОценки = ИменаКолонокЗначенияОценки.Получить(Выборка.Оценка);
		СтрокаОценки = ТаблицаОценка.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОценки, Выборка);
		СтрокаОценки[ИмяКолонкиЗначенияОценки] = Истина;
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИЗакрытьНаСервере()
	ОтветственныйОценки = Пользователи.ТекущийПользователь();
	НаборЗаписей = РегистрыСведений.ОценкиКачестваКода.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.БизнесПроцесс.Установить(БизнесПроцесс);
	Для Каждого ОценкаКачества Из ЭтаФорма[ИмяТаблицыОценка] Цикл
		Оценка = Неопределено;
		Для Каждого КлючИЗначение Из ЗначениеОценкиПоИмениПоля Цикл
			КолонкаОценки = КлючИЗначение.Ключ;
			Если ОценкаКачества[КолонкаОценки] Тогда
				Оценка = КлючИЗначение.Значение;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Запись = НаборЗаписей.Добавить();
		Запись.БизнесПроцесс = БизнесПроцесс;
		Запись.ВидОценки = ОценкаКачества.КритерийОценки;
		Запись.Оцениваемый = ОценкаКачества.Оцениваемый;
		Запись.Оценка = Оценка;
		Запись.Ответственный = ОтветственныйОценки;
		Запись.Комментарий = ОценкаКачества.Комментарий;		
	КонецЦикла;
	НаборЗаписей.Записать();	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОценкуДляВсех(Оценка)
	Для Каждого СтрокаОценкиКачества Из ЭтаФорма[ИмяТаблицыОценка] Цикл
		Для Каждого КлючИЗначение Из ЗначениеОценкиПоИмениПоля Цикл
			СтрокаОценкиКачества[КлючИЗначение.Ключ] = КлючИЗначение.Значение = Оценка;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьОцениваемогоНаСервере(Оцениваемый)
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВидыОценокКачестваКода.Ссылка КАК КритерийОценки,
		|	&Оцениваемый КАК Оцениваемый,
		|	ИСТИНА КАК СинонимИмяКолонкиОценкиПоУмолчанию
		|ИЗ
		|	Справочник.ВидыОценокКачестваКода КАК ВидыОценокКачестваКода";
	ИмяКолонкиОценкиПоУмолчанию = ИменаКолонокЗначенияОценки.Получить(ОценкаПоУмолчанию);
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СинонимИмяКолонкиОценкиПоУмолчанию", ИмяКолонкиОценкиПоУмолчанию);
	Запрос.УстановитьПараметр("Оцениваемый", Оцениваемый);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЭтаФорма[ИмяТаблицыОценка].Добавить(), Выборка);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти