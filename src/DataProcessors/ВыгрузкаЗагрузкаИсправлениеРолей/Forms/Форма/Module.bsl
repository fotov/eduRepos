#Если Не ВебКлиент Тогда

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(Объект.СтрокаСоединения) Тогда
		Части = СтрРазделить(СтрокаСоединенияИнформационнойБазы(), "="";", Ложь);
		Сервер1С = Части[1];
		База1С = Части[3];
		Объект.СтрокаСоединения = СтрШаблон("/S %1\%2", Сервер1С, База1С);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(Объект.Каталог);
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытияФайла.Каталог = Объект.Каталог;
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Объект.Каталог = ДиалогОткрытияФайла.Каталог;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтрокаСоединенияОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	АК_ВыполнитьКомандуКонфигуратора("");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьКомандуВыгрузки(Команда)
	
	ИмяФайла = Объект.Каталог + "\listFile.txt";
	Шаблон = "Role.%1";
	Текст = Новый ТекстовыйДокумент;
	Для Каждого Эл Из СписокРолей() Цикл
		Текст.ДобавитьСтроку(СтрШаблон(Шаблон, Эл));
	КонецЦикла;
	Текст.Записать(ИмяФайла);
	
	ЧастиКомманды = Новый Массив;
	ЧастиКомманды.Добавить("/DumpConfigToFiles");
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(Объект.Каталог));
	ЧастиКомманды.Добавить("-format Plain");
	ЧастиКомманды.Добавить("-listFile");
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(ИмяФайла));
	ПараметрыЗапуска = СтрСоединить(ЧастиКомманды, " ");
	АК_ВыполнитьКомандуКонфигуратора(ПараметрыЗапуска);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКомандуЗагрузки(Команда)
	
	Суффикс2 = ".new";
	Для Каждого Эл Из НайтиФайлы(Объект.Каталог, "*" + Суффикс2) Цикл
		ПереместитьФайл(Эл.ПолноеИмя, СтрЗаменить(Эл.ПолноеИмя, Суффикс2, ""));
	КонецЦикла;
	
	ИмяФайла = Объект.Каталог + "\listFile.txt";
	Текст = Новый ТекстовыйДокумент;
	Для Каждого Эл Из НайтиФайлы(Объект.Каталог, "Role.*.Rights.xml") Цикл
		Текст.ДобавитьСтроку(Эл.ПолноеИмя);
	КонецЦикла;
	Текст.Записать(ИмяФайла);
	
	ЧастиКомманды = Новый Массив;
	ЧастиКомманды.Добавить("/LoadConfigFromFiles");
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(Объект.Каталог));
	ЧастиКомманды.Добавить("-format Plain");
	ЧастиКомманды.Добавить("-listFile");
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(ИмяФайла));
	ПараметрыЗапуска = СтрСоединить(ЧастиКомманды, " ");
	АК_ВыполнитьКомандуКонфигуратора(ПараметрыЗапуска);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьФайлыРолей(Команда)
	
	Суффикс1 = ".old";
	Суффикс2 = ".new";
	Для Каждого Эл Из НайтиФайлы(Объект.Каталог, "Role.*.Rights.xml") Цикл
		ПереместитьФайл(Эл.ПолноеИмя, Эл.ПолноеИмя + Суффикс1);
	КонецЦикла;
	
	Для Каждого Эл Из НайтиФайлы(Объект.Каталог, "*" + Суффикс1) Цикл
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(Эл.ПолноеИмя);
		ПолныйТекст = Текст.ПолучитьТекст();
		Если СтрНайти(ПолныйТекст, "<value>false</value>") = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если СтрНайти(ПолныйТекст, "<setForNewObjects>true</setForNewObjects>") Тогда
			Продолжить;
		КонецЕсли;
		
		Чтение = Новый ЧтениеXML;
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.ОткрытьФайл(Эл.ПолноеИмя);
		ПостроительDOM = Новый ПостроительDOM;
		ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
		Объекты = ДокументDOM.ПервыйДочерний;
		МассивДляУдаленияОбъектов = Новый Массив;
		Для Каждого Элемент Из Объекты.ДочерниеУзлы Цикл
			Если Элемент.ИмяУзла <> "object" Тогда
				Продолжить;
			КонецЕсли;
			МассивДляУдаления = Новый Массив;
			Для Каждого Право Из Элемент.ДочерниеУзлы Цикл
				Если Право.ИмяУзла <> "right" Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого Свойство Из Право.ДочерниеУзлы Цикл
					Если Право.ИмяУзла <> "value" И Свойство.ТекстовоеСодержимое = "false" Тогда
						МассивДляУдаления.Добавить(Право);
						Продолжить;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Для Каждого Удалить Из МассивДляУдаления Цикл
				Элемент.УдалитьДочерний(Удалить);
			КонецЦикла;
			Если Элемент.ДочерниеУзлы.Количество() = 1 Тогда
				МассивДляУдаленияОбъектов.Добавить(Элемент);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Удалить Из МассивДляУдаленияОбъектов Цикл
			Объекты.УдалитьДочерний(Удалить);
		КонецЦикла;
		
		ЗаписьXML = Новый ЗаписьXML();
		ЗаписьXML.ОткрытьФайл(СтрЗаменить(Эл.ПолноеИмя, Суффикс1, Суффикс2));
		ФайлDOM = Новый ЗаписьDOM();
		ФайлDOM.Записать(ДокументDOM, ЗаписьXML);
		ЗаписьXML.Закрыть();
		
		Сообщить(Эл.ПолноеИмя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРолиУстанавливатьПраваДляНовыхОбъектов(Команда)
	Для Каждого Эл Из НайтиФайлы(Объект.Каталог, "*.old") Цикл
		Текст = Новый ТекстовыйДокумент;
		Текст.Прочитать(Эл.ПолноеИмя);
		Если СтрНайти(Текст.ПолучитьТекст(), "<setForNewObjects>true</setForNewObjects>") Тогда
			Сообщить(Эл.Имя);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьКорень(Команда)
	
	ИмяФайла = Объект.Каталог + "/listFile.txt";
	Текст = Новый ТекстовыйДокумент;
	Текст.ДобавитьСтроку("Configuration");
	Текст.Записать(ИмяФайла);
	
	ЧастиКомманды = Новый Массив;
	ЧастиКомманды.Добавить("/DumpConfigToFiles");
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(Объект.Каталог));
	ЧастиКомманды.Добавить("-format Plain");
	ЧастиКомманды.Добавить("-listFile");
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(ИмяФайла));
	ПараметрыЗапуска = СтрСоединить(ЧастиКомманды, " ");
	АК_ВыполнитьКомандуКонфигуратора(ПараметрыЗапуска);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКорень(Команда)
	
	ЧастиКомманды = Новый Массив;
	ЧастиКомманды.Добавить("/LoadConfigFromFiles");
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(Объект.Каталог));
	ЧастиКомманды.Добавить("-format Plain");
	ЧастиКомманды.Добавить("-files");
	ЧастиКомманды.Добавить("Configuration.xml");
	ПараметрыЗапуска = СтрСоединить(ЧастиКомманды, " ");
	АК_ВыполнитьКомандуКонфигуратора(ПараметрыЗапуска);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФайлВерсии(Команда)
	
	Версия = Формат(ТекущаяДата(), "ДФ=yyyy.MM.dd");
	Версия = Версия + "." + XMLСтрока(ТекущаяУниверсальнаяДатаВМиллисекундах() % 10000);
	Версия = СтрШаблон("<Version>%1</Version>", Версия);
	СтараяВерсия = СтрШаблон("<Version>%1</Version>", ТекущаяВерсия()); // лень читать xml
	
	ИмяФайла = Объект.Каталог + "/Configuration.xml";
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяФайла);
	Строка = Текст.ПолучитьТекст();
	Строка = СтрЗаменить(Строка, СтараяВерсия, Версия);
	Строка = СтрЗаменить(Строка, "<Version/>", Версия);
	Текст.УстановитьТекст(Строка);
	Текст.Записать(ИмяФайла);
	Сообщить(Версия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗахватитьКорень(Команда)

	ПутьКФайлуСоСпискомОбъектов = Объект.Каталог + "objects.txt";
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(
		"<Objects xmlns=""http://v8.1c.ru/8.3/config/objects"" version=""1.0"">
		|	<Configuration includeChildObjects=""false""/>
		|</Objects>");
	Текст.Записать(ПутьКФайлуСоСпискомОбъектов);
	
	СтрокаСоединения = "http://10.0.2.224/fin/fin.1ccr/fin";
	ПользовательХранилища = "dors";
	ПарольХранилища = "";
	
	ЧастиКомманды = Новый Массив;
	ЧастиКомманды.Добавить("/ConfigurationRepositoryF """+СтрокаСоединения + """");
	ЧастиКомманды.Добавить("/ConfigurationRepositoryN """+ПользовательХранилища + """");
	Если Не ПустаяСтрока(ПарольХранилища) Тогда
		ЧастиКомманды.Добавить("/ConfigurationRepositoryP """+ПарольХранилища + """");
	КонецЕсли;
	
	ЧастиКомманды.Добавить("/ConfigurationRepositoryLock ");
	ЧастиКомманды.Добавить(СтрШаблон("-objects ""%1""", ПутьКФайлуСоСпискомОбъектов));
	
	ПараметрыЗапуска = СтрСоединить(ЧастиКомманды, " ");
	АК_ВыполнитьКомандуКонфигуратора(ПараметрыЗапуска);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СписокРолей()
	СписокРолей = Новый Массив;
	Для Каждого Роль Из Метаданные.Роли Цикл
		СписокРолей.Добавить(Роль.Имя);
	КонецЦикла;
	Возврат СписокРолей;
КонецФункции

&НаСервере
Функция ТекущаяВерсия()
	Возврат Метаданные.Версия;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция АК_СтрокаВКавычках(Строка)
	Возврат СтрШаблон("""%1""", Строка);
КонецФункции

&НаКлиенте
Процедура АК_ВыполнитьКомандуКонфигуратора(ПараметрыЗапуска = "")
	Платформа = КаталогПрограммы()+"1cv8.exe";
	ЧастиКомманды = Новый Массив;
	ЧастиКомманды.Добавить(АК_СтрокаВКавычках(Платформа));
	ЧастиКомманды.Добавить("DESIGNER");
	ЧастиКомманды.Добавить(Объект.СтрокаСоединения);
	ЧастиКомманды.Добавить("/AppAutoCheckVersion+");
	ЧастиКомманды.Добавить("/DisableStartupMessages");
	ЧастиКомманды.Добавить("/DisableStartupDialogs");
	ЧастиКомманды.Добавить(ПараметрыЗапуска);
	ЧастиКомманды.Добавить("");
	
	Команда = СтрСоединить(ЧастиКомманды, " ");
	ЗапуститьПриложение(Команда);
	//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Команда);
	Сообщить(Команда);
КонецПроцедуры

#КонецОбласти

#КонецЕсли

